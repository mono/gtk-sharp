<Type Name="LogAttr" FullName="Pango.LogAttr">
  <TypeSignature Language="C#" Maintainer="auto" Value="public struct LogAttr" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LogAttr extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>pango-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stores information about the attributes of a single character.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="BackspaceDeletesCharacter">
      <MemberSignature Language="C#" Value="public bool BackspaceDeletesCharacter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackspaceDeletesCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether Backspace deletes individual characters rather than complete grapheme clusters.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsCharBreak">
      <MemberSignature Language="C#" Value="public bool IsCharBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCharBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not a break is allowed before this character when doing character wrap.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsCursorPosition">
      <MemberSignature Language="C#" Value="public bool IsCursorPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCursorPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not the cursor can appear in front of this character.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsExpandableSpace">
      <MemberSignature Language="C#" Value="public bool IsExpandableSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpandableSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="IsLineBreak">
      <MemberSignature Language="C#" Value="public bool IsLineBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not a line break is allowed before this character.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsMandatoryBreak">
      <MemberSignature Language="C#" Value="public bool IsMandatoryBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMandatoryBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not a line break is required before this character.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsSentenceBoundary">
      <MemberSignature Language="C#" Value="public bool IsSentenceBoundary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSentenceBoundary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not this character is a sentence boundary.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>
	    There are two ways to divide sentences. The first assigns
	    all intersentence whitespace/control/format chars to some
	    sentence, so all characters are in some sentence; <see cref="M:Pango.LogAttr.IsSentenceBoundary" /> denotes the
	    boundaries in this case. See <see cref="M:Pango.LogAttr.IsSentenceStart" /> and <see cref="M:Pango.LogAttr.IsSentenceEnd" /> for the other
	    method.
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsSentenceEnd">
      <MemberSignature Language="C#" Value="public bool IsSentenceEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSentenceEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not this is the first non-sentence character after a sentence.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>
	    There are two ways to divide sentences. The first is the
	    method used by <see cref="M:Pango.LogAttr.IsSentenceBoundary" /> (qv). The
	    second way is to consider intersentence characters to not
	    be part of any sentence, in which case <see cref="M:Pango.LogAttr.IsSentenceStart" /> identifies the
	    first character in a sentence and <see cref="M:Pango.LogAttr.IsSentenceEnd" /> identifies the
	    first non-sentence character after a sentence.
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsSentenceStart">
      <MemberSignature Language="C#" Value="public bool IsSentenceStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSentenceStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not this is the first character in a sentence.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>
	    There are two ways to divide sentences. The first is the
	    method used by <see cref="M:Pango.LogAttr.IsSentenceBoundary" /> (qv). The
	    second way is to consider intersentence characters to not
	    be part of any sentence, in which case <see cref="M:Pango.LogAttr.IsSentenceStart" /> identifies the
	    first character in a sentence and <see cref="M:Pango.LogAttr.IsSentenceEnd" /> identifies the
	    first non-sentence character after a sentence.
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsWhite">
      <MemberSignature Language="C#" Value="public bool IsWhite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not this is a whitespace character.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsWordEnd">
      <MemberSignature Language="C#" Value="public bool IsWordEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWordEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not this is the first non-word character after a word.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>
	    Note that in degenerate cases, you could have both this
	    propery and <see cref="M:Pango.LogAttr.IsWordStart" /> set
	    on the same character, most likely for sentences (e.g. no
	    space after a period, so the next sentence starts right
	    away)
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsWordStart">
      <MemberSignature Language="C#" Value="public bool IsWordStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWordStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether or not this is the first character in a word.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>
	    Note that in degenerate cases, you could have both this
	    propery and <see cref="M:Pango.LogAttr.IsWordEnd" /> set
	    on the same character, most likely for sentences (e.g. no
	    space after a period, so the next sentence starts right
	    away)
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static Pango.LogAttr New (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Pango.LogAttr New(native int raw) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Pango.LogAttr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">an object of type <see cref="T:System.IntPtr" /></param>
        <summary>Internal method</summary>
        <returns>an object of type <see cref="T:Pango.LogAttr" /></returns>
        <remarks>This is an internal method, and should not be used by user code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static Pango.LogAttr Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype Pango.LogAttr Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Pango.LogAttr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an empty <see cref="T:Pango.LogAttr" /></summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
