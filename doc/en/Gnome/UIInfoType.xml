<Type Name="UIInfoType" FullName="Gnome.UIInfoType">
  <TypeSignature Language="C#" Maintainer="auto" Value="public enum UIInfoType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UIInfoType extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
    <AssemblyVersion>2.24.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>These values identify the item type that a particular <see cref="T:Gnome.UIInfo" /> structure specifies.</summary>
    <remarks>
    One should be careful when using Gnome.App.Create[Custom|Interp|WithData] methods with 
    <see cref="T:Gnome.UIInfo" /> arrays containing BuilderData items, since their 
    <see cref="T:Gnome.UIBuilderData" /> structures completely override the ones generated or 
    supplied by the above methods.
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuilderData">
      <MemberSignature Language="C#" Value="BuilderData" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType BuilderData = int32(7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies the builder data for the following entries, see code for further info.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Endofinfo">
      <MemberSignature Language="C#" Value="Endofinfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType Endofinfo = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>No more items, use it at the end of an array.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="Help" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType Help = int32(6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create a list of help topics, used in the Help menu.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="Include" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType Include = int32(10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> 
	Almost like Subtree, but inserts items into the current menu 
	or whatever, instead of making a submenu.
	</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="Item" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType Item = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Normal item, or radio item if it is inside a radioitems group.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemConfigurable">
      <MemberSignature Language="C#" Value="ItemConfigurable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType ItemConfigurable = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>A configurable menu item.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radioitems">
      <MemberSignature Language="C#" Value="Radioitems" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType Radioitems = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Radio item group.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="Separator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType Separator = int32(5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Separator line (menus) or blank space (toolbars).</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtree">
      <MemberSignature Language="C#" Value="Subtree" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType Subtree = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Item that defines a subtree/submenu.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtreeStock">
      <MemberSignature Language="C#" Value="SubtreeStock" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType SubtreeStock = int32(9)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
	Item that defines a subtree/submenu, same as Subtree, 
	but the texts should be looked up in the libgnome catalog.
	</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Toggleitem">
      <MemberSignature Language="C#" Value="Toggleitem" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Gnome.UIInfoType Toggleitem = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.UIInfoType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Toggle (check box) item.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
