<Type Name="MimeType" FullName="Gnome.Vfs.MimeType">
  <TypeSignature Language="C#" Value="public class MimeType" Maintainer="auto" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MimeType extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>gnome-vfs-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
    <AssemblyVersion>2.24.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>File Types; functions for getting information about files based on their MIME type.</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MimeType (Gnome.Vfs.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Gnome.Vfs.Uri uri) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="uri" Type="Gnome.Vfs.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">a <see cref="T:Gnome.Vfs.Uri" /></param>
        <summary>Construct a new MimeType for this <see cref="T:Gnome.Vfs.Uri" />.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MimeType (string mimetype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mimetype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="mimetype" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mimetype">
          <see cref="T:System.String" /> representation of the mime type.</param>
        <summary>Construct a new MimeType for the specified mime type.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MimeType (byte[] buffer, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 size) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">a <see cref="T:System.Byte" /> array containing the first part of a file.</param>
        <param name="size">the size of the buffer.</param>
        <summary>Tries to guess the mime type of the data in the buffer using the magic patterns.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeExecutable">
      <MemberSignature Language="C#" Value="public bool CanBeExecutable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeExecutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether files of this mime type might conceivably be executable. Default for known types is false. Default for unknown types is true.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.MimeAction DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gnome.Vfs.MimeAction DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.MimeAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Query the mime database for default <see cref="T:Gnome.Vfs.MimeAction" /> associated with a particular mime type.</summary>
        <value>a <see cref="T:Gnome.Vfs.MimeAction" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultActionType">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.MimeActionType DefaultActionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gnome.Vfs.MimeActionType DefaultActionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.MimeActionType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Query the mime database for the <see cref="T:Gnome.Vfs.MimeActionType" /> to be performed on a particular mime type by default.</summary>
        <value>a <see cref="T:Gnome.Vfs.MimeActionType" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Query the mime database for a description of the specified mime type.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMimeTypeForUri">
      <MemberSignature Language="C#" Value="public static string GetMimeTypeForUri (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMimeTypeForUri(string uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <see cref="T:System.String" /> representation of the <see cref="T:Gnome.Vfs.Uri" />.</param>
        <summary>Shortcut for determining the mime type of a file. Use this if you just want to know what mime type a file has and do not want to create a new instance of MimeType.</summary>
        <returns>
          <see cref="T:System.String" /> representation of the mime type.</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public string Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Query the mime database for an icon representing the specified mime type.</summary>
        <value>The filename of the icon as listed in the mime database. This is usually a filename without path information, e.g. "i-chardev.png", and sometimes does not have an extension, e.g. "i-regular" if the icon is supposed to be image type agnostic between icon themes. Icons are generic, and not theme specific. These will not necessarily match with the icons a user sees in Nautilus, you have been warned.</value>
        <remarks>This property is deprecated. You should use <see cref="M:Gnome.Icon.Lookup(Gtk.IconTheme,Gnome.ThumbnailFactory,System.String,System.String,Gnome.Vfs.FileInfo,System.String,Gnome.IconLookupFlags,Gnome.IconLookupResultFlags&amp;)" /> to lookup icons.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The name of the mime type. This is the same as what the <see cref="M:Gnome.Vfs.MimeType.ToString" /> method returns.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownMimeType">
      <MemberSignature Language="C#" Value="public static readonly string UnknownMimeType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UnknownMimeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The value returned for the mime type when a file did not match any entries in the mime database. May be treated as a file of an unknown type.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
