<Type Name="Uri" FullName="Gnome.Vfs.Uri">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class Uri : GLib.Opaque" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Uri extends GLib.Opaque" />
  <AssemblyInfo>
    <AssemblyName>gnome-vfs-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
    <AssemblyVersion>2.24.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>GLib.Opaque</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>Functions for manipulating Uris.</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string text_uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text_uri) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="text_uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text_uri">
          <see cref="T:System.String" /> representation of a Uri.</param>
        <summary>Create a new Uri instance from the <see cref="T:System.String" /> representation.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileName">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Uri AppendFileName (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gnome.Vfs.Uri AppendFileName(string filename) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">a <see cref="T:System.String" /></param>
        <summary>Create a new Uri obtained by appending the specified filename.  This will take care of adding an appropriate directory separator between the end of Uri and the start of the filename if necessary.</summary>
        <returns>a <see cref="T:Gnome.Vfs.Uri" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPath">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Uri AppendPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gnome.Vfs.Uri AppendPath(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">a <see cref="T:System.String" /></param>
        <summary>Create a new Uri obtained by appending the path. This will take care of adding an appropriate directory separator between the end of the Uri and the start of the path if necessary as well as escaping the path as necessary.</summary>
        <returns>a <see cref="T:Gnome.Vfs.Uri" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendString">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Uri AppendString (string uri_fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gnome.Vfs.Uri AppendString(string uri_fragment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri_fragment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri_fragment">a <see cref="T:System.String" /></param>
        <summary>Create a new Uri obtained by appending the Uri fragment. This will take care of adding an appropriate directory separator between the end of the Uri and the start of the fragment if necessary.</summary>
        <returns>a <see cref="T:Gnome.Vfs.Uri" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Uri Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gnome.Vfs.Uri Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a duplicate of the Uri.</summary>
        <returns>a <see cref="T:Gnome.Vfs.Uri" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if the Uri points to an existing entity.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractDirname">
      <MemberSignature Language="C#" Value="public string ExtractDirname ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExtractDirname() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Extract the name of the directory in which the file pointed to by the Uri is stored as a newly allocated string. The string will end with a path character.</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractShortName">
      <MemberSignature Language="C#" Value="public string ExtractShortName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExtractShortName() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve base file name for the Uri, ignoring any trailing path separators.</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>This matches the XPG definition of basename, but not g_basename. This is often useful when you want the name of something that's pointed to by a Uri, and don't care whether the Uri has a directory or file form. If the Uri points to the root of a domain, the host name is returned. If there's no host name, it returns a single path character.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractShortPathName">
      <MemberSignature Language="C#" Value="public string ExtractShortPathName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExtractShortPathName() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve base file name for the Uri, ignoring any trailing path separators.</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>This matches the XPG definition of basename, but not g_basename. This is often useful when you want the name of something that's pointed to by a Uri, and don't care whether the Uri has a directory or file form. If the Uri points to the root (including the root of any domain), it returns a single path character.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Uri ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentIdentifier">
      <MemberSignature Language="C#" Value="public string FragmentIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the optional fragment identifier.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileInfo">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.FileInfo GetFileInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gnome.Vfs.FileInfo GetFileInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <see cref="T:Gnome.Vfs.FileInfo" /> for this Uri.</summary>
        <returns>a <see cref="T:Gnome.Vfs.FileInfo" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileInfo">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.FileInfo GetFileInfo (Gnome.Vfs.FileInfoOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gnome.Vfs.FileInfo GetFileInfo(valuetype Gnome.Vfs.FileInfoOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Gnome.Vfs.FileInfoOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <see cref="T:Gnome.Vfs.FileInfoOptions" /> for the <see cref="T:Gnome.Vfs.FileInfo" /> metadata.</param>
        <summary>Returns the <see cref="T:Gnome.Vfs.FileInfo" /> for this Uri with the specified <see cref="T:Gnome.Vfs.FileInfoOptions" />.</summary>
        <returns>a <see cref="T:Gnome.Vfs.FileInfo" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalPathFromUri">
      <MemberSignature Language="C#" Value="public static string GetLocalPathFromUri (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalPathFromUri(string uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">a <see cref="T:System.String" /></param>
        <summary>Returns a local path for a file:/// Uri.</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>Only use with <see cref="M:Gnome.Vfs.Uri.IsLocal" /> Uris.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUriFromLocalPath">
      <MemberSignature Language="C#" Value="public static string GetUriFromLocalPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUriFromLocalPath(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">a <see cref="T:System.String" /></param>
        <summary>Returns a file:/// Uri for the local path.</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasParent">
      <MemberSignature Language="C#" Value="public bool HasParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if Uri has a parent or not.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public string HostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the Uris host name.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostPort">
      <MemberSignature Language="C#" Value="public uint HostPort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 HostPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the host port number.</summary>
        <value>The host port number used.  If the value is zero, the default port value for the specified toplevel access method is used.</value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if the Uri is a local (native) file system.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public bool IsParent (Gnome.Vfs.Uri possible_child, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParent(class Gnome.Vfs.Uri possible_child, bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="possible_child" Type="Gnome.Vfs.Uri" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="possible_child">a <see cref="T:Gnome.Vfs.Uri" /></param>
        <param name="recursive">a flag to turn recursive check on.</param>
        <summary>Check if the possible_child Uri is contained by this Uri. If recursive is false, just try the immediate parent directory, else search up through the hierarchy.</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeFullFromRelative">
      <MemberSignature Language="C#" Value="public static string MakeFullFromRelative (string base_uri, string relative_uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeFullFromRelative(string base_uri, string relative_uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base_uri" Type="System.String" />
        <Parameter Name="relative_uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="base_uri">a <see cref="T:System.String" /></param>
        <param name="relative_uri">a <see cref="T:System.String" /></param>
        <summary>Returns a full Uri given a full base Uri, and a secondary Uri which may be relative.</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.MimeType MimeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gnome.Vfs.MimeType MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.MimeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The Uris <see cref="T:Gnome.Vfs.MimeType" />.</summary>
        <value>a <see cref="T:Gnome.Vfs.MimeType" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Uri Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gnome.Vfs.Uri Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the Uris parent.</summary>
        <value>a <see cref="T:Gnome.Vfs.Uri" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseList">
      <MemberSignature Language="C#" Value="public static Gnome.Vfs.Uri[] ParseList (string uri_list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gnome.Vfs.Uri[] ParseList(string uri_list) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Uri[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri_list" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri_list">a <see cref="T:System.String" /></param>
        <summary>Extracts a list of Uris from a standard text/uri-list, such as one you would get on a drop operation.</summary>
        <returns>a <see cref="T:Gnome.Vfs.Uri[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the password.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the full path name.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ref">
      <MemberSignature Language="C#" Value="protected override void Ref (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Ref(native int raw) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRelative">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Uri ResolveRelative (string relative_reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gnome.Vfs.Uri ResolveRelative(string relative_reference) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relative_reference" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relative_reference">
          <see cref="T:System.String" /> representing a possibly relative Uri reference.</param>
        <summary>Create a new Uri from relative_reference, relative to this Uri.</summary>
        <returns>a <see cref="T:Gnome.Vfs.Uri" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveSymbolicLink">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Uri ResolveSymbolicLink (string relative_reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gnome.Vfs.Uri ResolveSymbolicLink(string relative_reference) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relative_reference" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relative_reference">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gnome# 2.20" />
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the scheme.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileInfo">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Result SetFileInfo (Gnome.Vfs.FileInfo info, Gnome.Vfs.SetFileInfoMask mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Gnome.Vfs.Result SetFileInfo(class Gnome.Vfs.FileInfo info, valuetype Gnome.Vfs.SetFileInfoMask mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Gnome.Vfs.FileInfo" />
        <Parameter Name="mask" Type="Gnome.Vfs.SetFileInfoMask" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:Gnome.Vfs.FileInfo" /> information that must be set for the file.</param>
        <param name="mask">
          <see cref="T:Gnome.Vfs.SetFileInfoMask" /> bitmask for which fields should actually be modified.</param>
        <summary>Set file information; only the information for which the corresponding bit in <see cref="T:Gnome.Vfs.SetFileInfoMask" /> is set is actually modified.</summary>
        <returns>a <see cref="T:Gnome.Vfs.Result" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (Gnome.Vfs.UriHideOptions hide_options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(valuetype Gnome.Vfs.UriHideOptions hide_options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hide_options" Type="Gnome.Vfs.UriHideOptions" />
      </Parameters>
      <Docs>
        <param name="hide_options">hide the specified <see cref="T:Gnome.Vfs.UriHideOptions" /> fields.</param>
        <summary>Translate the Uri into a printable string hiding the fields specified by <see cref="T:Gnome.Vfs.UriHideOptions" />.</summary>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Result Truncate (ulong length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Gnome.Vfs.Result Truncate(unsigned int64 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="length">length of the new file.</param>
        <summary>Truncate the Uri to be the specified length in bytes. Data past the specified length will be discarded.</summary>
        <returns>a <see cref="T:Gnome.Vfs.Result" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlink">
      <MemberSignature Language="C#" Value="public Gnome.Vfs.Result Unlink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Gnome.Vfs.Result Unlink() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gnome.Vfs.Result</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unlink this Uri (i.e. delete the file).</summary>
        <returns>a <see cref="T:Gnome.Vfs.Result" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unref">
      <MemberSignature Language="C#" Value="protected override void Unref (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Unref(native int raw) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the user name.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeFreeSpace">
      <MemberSignature Language="C#" Value="public long VolumeFreeSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 VolumeFreeSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.24.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the amount of free space on a <see cref="T:Gnome.Vfs.Volume" />.</summary>
        <value>a <see cref="T:System.Int64" /></value>
        <remarks>Only works for Uris with the file: <see cref="M:Gnome.Vfs.Uri.Scheme" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
