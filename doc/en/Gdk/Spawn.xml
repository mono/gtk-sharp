<Type Name="Spawn" FullName="Gdk.Spawn">
  <TypeSignature Language="C#" Value="public class Spawn" Maintainer="auto" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Spawn extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>gdk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Process spawning methods</summary>
    <remarks />
    <since version="Gtk# 2.4" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Spawn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Do not use.</summary>
        <remarks>No instance methods exist.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLineOnScreen">
      <MemberSignature Language="C#" Value="public static bool CommandLineOnScreen (Gdk.Screen screen, string command_line);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CommandLineOnScreen(class Gdk.Screen screen, string command_line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
        <Parameter Name="command_line" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="screen">a <see cref="T:Gdk.Screen" /></param>
        <param name="command_line">a <see cref="T:System.String" /></param>
        <summary>Spawns a process on a Screen using a commandline string.</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnScreen">
      <MemberSignature Language="C#" Value="public static bool OnScreen (Gdk.Screen screen, string working_directory, string[] argv, string[] envp, GLib.SpawnFlags flags, GLib.SpawnChildSetupFunc child_setup, out int child_pid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OnScreen(class Gdk.Screen screen, string working_directory, string[] argv, string[] envp, valuetype GLib.SpawnFlags flags, class GLib.SpawnChildSetupFunc child_setup, int32 child_pid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
        <Parameter Name="working_directory" Type="System.String" />
        <Parameter Name="argv" Type="System.String[]" />
        <Parameter Name="envp" Type="System.String[]" />
        <Parameter Name="flags" Type="GLib.SpawnFlags" />
        <Parameter Name="child_setup" Type="GLib.SpawnChildSetupFunc" />
        <Parameter Name="child_pid" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="screen">A screen to spawn on.</param>
        <param name="working_directory">The process working directory.</param>
        <param name="argv">Argument list, with program at index 0.</param>
        <param name="envp">List of environment variables.</param>
        <param name="flags">Spawning flags.</param>
        <param name="child_setup">Child setup callback.</param>
        <param name="child_pid">Returns the child process id.</param>
        <summary>Spawns a process on a screen using argument and environment lists.</summary>
        <returns>If <see langword="true" />, the process was spawned successfully.</returns>
        <remarks />
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="OnScreenWithPipes">
      <MemberSignature Language="C#" Value="public static bool OnScreenWithPipes (Gdk.Screen screen, string working_directory, string[] argv, string[] envp, GLib.SpawnFlags flags, GLib.SpawnChildSetupFunc child_setup, out int child_pid, out int standard_input, out int standard_output, out int standard_error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OnScreenWithPipes(class Gdk.Screen screen, string working_directory, string[] argv, string[] envp, valuetype GLib.SpawnFlags flags, class GLib.SpawnChildSetupFunc child_setup, int32 child_pid, int32 standard_input, int32 standard_output, int32 standard_error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
        <Parameter Name="working_directory" Type="System.String" />
        <Parameter Name="argv" Type="System.String[]" />
        <Parameter Name="envp" Type="System.String[]" />
        <Parameter Name="flags" Type="GLib.SpawnFlags" />
        <Parameter Name="child_setup" Type="GLib.SpawnChildSetupFunc" />
        <Parameter Name="child_pid" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="standard_input" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="standard_output" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="standard_error" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="screen">A screen to spawn on.</param>
        <param name="working_directory">The process working directory.</param>
        <param name="argv">Argument list, with program at index 0.</param>
        <param name="envp">List of environment variables.</param>
        <param name="flags">Spawning flags.</param>
        <param name="child_setup">Child setup callback.</param>
        <param name="child_pid">Returns the child process id.</param>
        <param name="standard_input">Returns a stdin pipe.</param>
        <param name="standard_output">Returns a stdout pipe.</param>
        <param name="standard_error">Returns a stderr pipe.</param>
        <summary>Spawns a process on a screen using argument and environment lists.</summary>
        <returns>If <see langword="true" />, the process was spawned successfully.</returns>
        <remarks />
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
  </Members>
</Type>
