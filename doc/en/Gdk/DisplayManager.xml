<Type Name="DisplayManager" FullName="Gdk.DisplayManager">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class DisplayManager : GLib.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DisplayManager extends GLib.Object" />
  <AssemblyInfo>
    <AssemblyName>gdk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>GLib.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>The purpose of this class is to offer notification when displays appear or disappear or the default display changes.</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DisplayManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Do not use.</summary>
        <remarks>This object is a singleton object, and should be accessed through <see cref="M:Gdk.DisplayManager.Get" /> instead of creating a new instance.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DisplayManager (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Protected Constructor.</summary>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DisplayManager (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">raw unmanaged pointer.</param>
        <summary>Internal constructor.</summary>
        <remarks>This constructor is internal and should not be used.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDisplay">
      <MemberSignature Language="C#" Value="public Gdk.Display DefaultDisplay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gdk.Display DefaultDisplay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("default-display")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gdk.Display</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Access and modify the default display.</summary>
        <value>The default <see cref="T:Gdk.Display" />.</value>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayOpened">
      <MemberSignature Language="C#" Value="public event Gdk.DisplayOpenedHandler DisplayOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class Gdk.DisplayOpenedHandler DisplayOpened" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("display_opened")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gdk.DisplayOpenedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Event emitted when a display is opened.</summary>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Gdk.DisplayManager Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gdk.DisplayManager Get() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gdk.DisplayManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the global DisplayManager instance.</summary>
        <returns>The global <see cref="T:Gdk.DisplayManager" /> instance.</returns>
        <remarks>This is the only valid way to access this class.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gdk.DisplayManager" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListDisplays">
      <MemberSignature Language="C#" Value="public Gdk.Display[] ListDisplays ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gdk.Display[] ListDisplays() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gdk.Display[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>List all currently open displays.</summary>
        <returns>The currently open displays as an array of <see cref="T:Gdk.Display" />.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayOpened (Gdk.Display display);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayOpened(class Gdk.Display display) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideDisplayOpened", Type=typeof(Gdk.DisplayManager))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Gdk.Display" />
      </Parameters>
      <Docs>
        <param name="display">a <see cref="T:Gdk.Display" /></param>
        <summary>Default handler for the <see cref="M:Gdk.DisplayManager.DisplayOpened" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gdk.DisplayManager.DisplayOpened" /> event.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
