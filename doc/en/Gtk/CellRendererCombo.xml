<Type Name="CellRendererCombo" FullName="Gtk.CellRendererCombo">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class CellRendererCombo : Gtk.CellRendererText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CellRendererCombo extends Gtk.CellRendererText" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.CellRendererText</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>Renders a combobox in a cell</summary>
    <remarks>
      <see cref="T:Gtk.CellRendererCombo" /> renders text in a cell like <see cref="T:Gtk.CellRendererText" /> from which it is derived. But while <see cref="T:Gtk.CellRendererText" /> offers a simple entry to edit the text, <see cref="T:Gtk.CellRendererCombo" /> offers a <see cref="T: Gtk.ComboBox" /> or <see cref="T:Gtk.ComboBoxEntry" /> widget to edit the text. The values to display in the combo box are taken from the tree model specified in the model property.

The combo cell renderer takes care of adding a text cell renderer to the combo box and sets it to display the column specified by its text-column property. Further cell renderers can be added in a handler for the editing-started signal. </remarks>
    <since version="Gtk# 2.6" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CellRendererCombo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CellRendererCombo (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Protected Constructor.</summary>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CellRendererCombo (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <summary>Internal constructor</summary>
        <remarks>This is not typically used by C# code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="public override void GetSize (Gtk.Widget widget, ref Gdk.Rectangle cell_area, out int x_offset, out int y_offset, out int width, out int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetSize(class Gtk.Widget widget, valuetype Gdk.Rectangle cell_area, int32 x_offset, int32 y_offset, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle&amp;" RefType="ref" />
        <Parameter Name="x_offset" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y_offset" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="width" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="height" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="x_offset">To be added.</param>
        <param name="y_offset">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.CellRendererCombo" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEntry">
      <MemberSignature Language="C#" Value="public bool HasEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("has-entry")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether to use an entry.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>If <see langword="true" />, the cell renderer will include an entry and allow to enter values other than the ones in the popup list.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Gtk.TreeModel Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.TreeModel Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("model")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.TreeModel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Holds a tree model containing the possible values for the combo box.</summary>
        <value>a <see cref="T:Gtk.TreeModel" /></value>
        <remarks>Use the <see cref="P:Gtk.CellRendererCombo.TextColumn" /> property to specify the column holding the values.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (Gdk.Drawable window, Gtk.Widget widget, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gdk.Rectangle expose_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class Gdk.Drawable window, class Gtk.Widget widget, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gdk.Rectangle expose_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="Gdk.Drawable" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="expose_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="window">To be added.</param>
        <param name="widget">To be added.</param>
        <param name="background_area">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="expose_area">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartEditing">
      <MemberSignature Language="C#" Value="public override Gtk.CellEditable StartEditing (Gdk.Event evnt, Gtk.Widget widget, string path, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Gtk.CellEditable StartEditing(class Gdk.Event evnt, class Gtk.Widget widget, string path, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.CellEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evnt" Type="Gdk.Event" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="evnt">To be added.</param>
        <param name="widget">To be added.</param>
        <param name="path">To be added.</param>
        <param name="background_area">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextColumn">
      <MemberSignature Language="C#" Value="public int TextColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("text-column")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies the model column which holds the possible values for the combo box.</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>
          <block subset="none" type="note">
            <para>this refers to the model specified in the model property, not the model backing the tree view to which this cell renderer is attached.
  </para>
          </block>
          <see cref="T:Gtk.CellRendererCombo" /> automatically adds a text cell renderer for this column to its combo box.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
