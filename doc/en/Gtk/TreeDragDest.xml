<Type Name="TreeDragDest" FullName="Gtk.TreeDragDest">
  <TypeSignature Language="C#" Maintainer="auto" Value="public interface TreeDragDest : GLib.IWrapper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TreeDragDest implements class GLib.IWrapper" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An interface to represent the rows of a tree when something is drag-and-dropped onto them.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="DragDataReceived">
      <MemberSignature Language="C#" Value="public bool DragDataReceived (Gtk.TreePath dest, Gtk.SelectionData selection_data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DragDataReceived(class Gtk.TreePath dest, class Gtk.SelectionData selection_data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Gtk.TreePath" />
        <Parameter Name="selection_data" Type="Gtk.SelectionData" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <param name="selection_data"> a  <see cref="M:Gtk.SelectionData" />, the data to drop</param>
        <summary>
	  Asks the TreeDragDest to insert a row before the given <paramref name="dest_path" />, deriving the contents of the row from the given <see cref="M:Gtk.SelectionData" />.
	</summary>
        <returns>A boolean for whether the row was dropped successfully.</returns>
        <remarks>If dest_path is outside the tree so that inserting before it is impossible, FALSE will be returned. Also, FALSE may be returned if the new row cannot be created for some model-specific reason. Should robustly handle a destination path no longer found in the model.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDropPossible">
      <MemberSignature Language="C#" Value="public bool RowDropPossible (Gtk.TreePath dest_path, Gtk.SelectionData selection_data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RowDropPossible(class Gtk.TreePath dest_path, class Gtk.SelectionData selection_data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest_path" Type="Gtk.TreePath" />
        <Parameter Name="selection_data" Type="Gtk.SelectionData" />
      </Parameters>
      <Docs>
        <param name="dest_path">To be added.</param>
        <param name="selection_data">a <see cref="M:Gtk.SelectionData" />, the data to drop</param>
        <summary>
	  Determines whether a drop is possible before the given <paramref name="dest" />, at the same depth as <paramref name="dest" />. i.e., can we drop the data in <paramref name="selection_data" /> at that location. <paramref name="dest" /> does not have to exist; the return value will almost certainly be FALSE if the parent of <paramref name="dest" /> doesn't exist, though.
</summary>
        <returns>A boolean for whether the drop is possible.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
