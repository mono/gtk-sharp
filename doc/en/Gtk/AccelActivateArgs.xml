<Type Name="AccelActivateArgs" FullName="Gtk.AccelActivateArgs">
  <TypeSignature Language="C#" Value="public class AccelActivateArgs : GLib.SignalArgs" Maintainer="auto" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccelActivateArgs extends GLib.SignalArgs" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>GLib.SignalArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This class extends <see cref="M:GLib.SignalArgs" /> with information about an activated accelerator.</summary>
    <remarks>
      <para>The <see cref="M:Gtk.AccelGroup.AccelActivate" /> event invokes <see cref="T:Gtk.AccelActivateHandler" /> delegates which pass event data via this class.</para>
    </remarks>
    <since version="Gtk# 2.4" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccelActivateArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Constructs and initializes a new instance of <see cref="T:Gtk.AccelActivatedArgs" /> with the default values.</summary>
        <remarks>When manually evoking an <see cref="T:Gtk.AccelActivateHandler" /> delegate, this constructor is used create the second argument.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acceleratable">
      <MemberSignature Language="C#" Value="public GLib.Object Acceleratable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GLib.Object Acceleratable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the object on which the accelerator was activated.</summary>
        <value>A <see cref="T:GLib.Object" /> containing the object on which the accelerator was activated.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keyval">
      <MemberSignature Language="C#" Value="public uint Keyval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Keyval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the key value that was used to activate the accelerator.</summary>
        <value>A <see cref="T:System.UInt32" /> containing the key value that was used to activate the accelerator.</value>
        <remarks>
          <para>This value represents a specific non-modifier key on the keyboard.</para>
          <para>A key combination may include a standard key and modifier keys, for example <c>Ctrl-S</c>. Check <see cref="P:Gtk.AccelActivateArgs.Modifier" /> for the modifiers that were applied.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifier">
      <MemberSignature Language="C#" Value="public Gdk.ModifierType Modifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gdk.ModifierType Modifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gdk.ModifierType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the mouse and keyboard modifier combination that was used to activate the accelerator.</summary>
        <value>A bitwise combined <see cref="T:Gdk.ModifierType" /> containing the mouse and keyboard modifier combination that was used to activate the accelerator.</value>
        <remarks>Modifiers can include Ctrl, Shift, Alt, Meta keys (Windows, Apple), and mouse buttons. These are items that by themselves my perform no task, but when combined, often with <see cref="P:Gtk.AccelActivateArgs" />, represent an accelerator. For example, <c>Ctrl-S</c>, <c>Ctrl-Alt-Del</c>, <c>Ctrl-Left Mouse Button</c>, or <c>Apple-Control-Reset</c>.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
