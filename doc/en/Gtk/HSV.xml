<Type Name="HSV" FullName="Gtk.HSV">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class HSV : Gtk.Widget" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HSV extends Gtk.Widget" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.Widget</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>A color selector based on hue, saturation, and value.</summary>
    <remarks>TODO: add an example.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HSV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HSV (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Protected Constructor.</summary>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HSV (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">Pointer to the C object.</param>
        <summary>Internal constructor</summary>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("changed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raised when the color of this widget changes.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public void GetColor (out double h, out double s, out double v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetColor(float64 h, float64 s, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="h" Type="System.Double&amp;" RefType="out" />
        <Parameter Name="s" Type="System.Double&amp;" RefType="out" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="h">a <see cref="T:System.Double&amp;" /></param>
        <param name="s">a <see cref="T:System.Double&amp;" /></param>
        <param name="v">a <see cref="T:System.Double&amp;" /></param>
        <summary>Gets the current color indicated by this widget.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetMetrics">
      <MemberSignature Language="C#" Value="public void GetMetrics (out int size, out int ring_width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetMetrics(int32 size, int32 ring_width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="ring_width" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="size">a <see cref="T:System.Int32&amp;" /> to fill with the hue ring size.</param>
        <param name="ring_width">a <see cref="T:System.Int32&amp;" /> to fill with the width of the hue ring.</param>
        <summary>Gets the current size of this widget.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.HSV" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAdjusting">
      <MemberSignature Language="C#" Value="public bool IsAdjusting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdjusting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
	  An HSV color selector is "adjusting" if multiple rapid 
	  changes are being made to its value, for example, when the user 
	  is adjusting the value with the mouse.  This property tells
	  whether the HSV color selector is being adjusted or not.
	</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks> 
	  Returns true if clients can ignore changes to the color value, since
	  they may be transitory, or false if they should consider the color 
	  value status to be final.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public event Gtk.MoveHandler Move;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.MoveHandler Move" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("move")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.MoveHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raised when this widget is moved.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideChanged", Type=typeof(Gtk.HSV))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.HSV.Changed" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.HSV.Changed" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMove (Gtk.DirectionType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMove(valuetype Gtk.DirectionType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideMove", Type=typeof(Gtk.HSV))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Gtk.DirectionType" />
      </Parameters>
      <Docs>
        <param name="type">a <see cref="T:Gtk.DirectionType" /></param>
        <summary>Default handler for the <see cref="M:Gtk.HSV.Move" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.HSV.Move" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColor">
      <MemberSignature Language="C#" Value="public void SetColor (double h, double s, double v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColor(float64 h, float64 s, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="h" Type="System.Double" />
        <Parameter Name="s" Type="System.Double" />
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="h">A <see cref="T:System.Double" />, the hue</param>
        <param name="s">A <see cref="T:System.Double" />, the saturation</param>
        <param name="v">A <see cref="T:System.Double" />, the value</param>
        <summary>Sets the color displayed in the widget.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetMetrics">
      <MemberSignature Language="C#" Value="public void SetMetrics (int size, int ring_width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMetrics(int32 size, int32 ring_width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="ring_width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">A <see cref="T:System.Int32" /></param>
        <param name="ring_width">A <see cref="T:System.Int32" /></param>
        <summary>Set the basic size of the hue ring.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToRgb">
      <MemberSignature Language="C#" Value="public static void ToRgb (double h, double s, double v, out double r, out double g, out double b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ToRgb(float64 h, float64 s, float64 v, float64 r, float64 g, float64 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="h" Type="System.Double" />
        <Parameter Name="s" Type="System.Double" />
        <Parameter Name="v" Type="System.Double" />
        <Parameter Name="r" Type="System.Double&amp;" RefType="out" />
        <Parameter Name="g" Type="System.Double&amp;" RefType="out" />
        <Parameter Name="b" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="h">a <see cref="T:System.Double" />, the hue</param>
        <param name="s">a <see cref="T:System.Double" />, the saturation</param>
        <param name="v">a <see cref="T:System.Double" />, the value</param>
        <param name="r">a <see cref="T:System.Double&amp;" />, red component</param>
        <param name="g">a <see cref="T:System.Double&amp;" />, blue component</param>
        <param name="b">a <see cref="T:System.Double&amp;" />, green component</param>
        <summary>Converts a HSV value to a RGB (red-green-blue) triplet.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
