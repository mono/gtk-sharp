<Type Name="Alignment" FullName="Gtk.Alignment">
  <TypeSignature Language="C#" Maintainer="Lee Mallabone" Value="public class Alignment : Gtk.Bin" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Alignment extends Gtk.Bin" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.Bin</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>A container that controls the alignment and size of its child.</summary>
    <remarks>
      <para>An Alignment widget controls the alignment and size of its child widget. It has four settings: <see cref="P:Gtk.Alignment.Xscale" />, <see cref="P:Gtk.Alignment.Yscale" />, <see cref="P:Gtk.Alignment.Xalign" />, and <see cref="P:Gtk.Alignment.Yalign" />.</para>
      <para>The scale settings are used to specify how much the child widget should expand to fill the space allocated to the Alignment. The values can range from 0 (meaning the child doesn't expand at all) to 1 (meaning the child expands to fill all of the available space).</para>
      <para>The alignment settings are used to position the child widget within the available area. The values range from 0 (top or left) to 1 (bottom or right). If the scale settings are both set to 1, (making the child expand), the alignment settings have no effect.</para>
      <para>To add a child to an Alignment, use the <see cref="M:Gtk.Container.Add" /> method from the <see cref="T:Gtk.Container" /> class.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Alignment (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Protected Constructor.</summary>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Alignment (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">Pointer to the C object.</param>
        <summary>Internal constructor</summary>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Alignment (float xalign, float yalign, float xscale, float yscale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 xalign, float32 yalign, float32 xscale, float32 yscale) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="xalign" Type="System.Single" />
        <Parameter Name="yalign" Type="System.Single" />
        <Parameter Name="xscale" Type="System.Single" />
        <Parameter Name="yscale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xalign">The horizontal alignment of the child widget, from 0 (left) to 1 (right).</param>
        <param name="yalign">The vertical alignment of the child widget, from 0 (top) to 1 (bottom).</param>
        <param name="xscale">The amount that the child widget expands horizontally to fill up unused space, from 0 to 1.</param>
        <param name="yscale">The amount that the child widget expands vertically to fill up unused space, from 0 to 1.</param>
        <summary>Creates a new Alignment with the specified alignment and spacing.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BottomPadding">
      <MemberSignature Language="C#" Value="public uint BottomPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 BottomPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("bottom-padding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The padding to insert at the bottom of the child widget.</summary>
        <value>a <see cref="T:System.UInt32" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="GetPadding">
      <MemberSignature Language="C#" Value="public void GetPadding (out uint padding_top, out uint padding_bottom, out uint padding_left, out uint padding_right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPadding(unsigned int32 padding_top, unsigned int32 padding_bottom, unsigned int32 padding_left, unsigned int32 padding_right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding_top" Type="System.UInt32&amp;" RefType="out" />
        <Parameter Name="padding_bottom" Type="System.UInt32&amp;" RefType="out" />
        <Parameter Name="padding_left" Type="System.UInt32&amp;" RefType="out" />
        <Parameter Name="padding_right" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="padding_top">a <see cref="T:System.UInt32" /></param>
        <param name="padding_bottom">a <see cref="T:System.UInt32" /></param>
        <param name="padding_left">a <see cref="T:System.UInt32" /></param>
        <param name="padding_right">a <see cref="T:System.UInt32" /></param>
        <summary>
	  Gets the padding on the different sides of the widget.
	</summary>
        <remarks>This is a convenience method.
	  See also <see cref="M:Gtk.Alignment.SetPadding" />.</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.Alignment" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftPadding">
      <MemberSignature Language="C#" Value="public uint LeftPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 LeftPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("left-padding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The padding to insert at the left of the child widget.</summary>
        <value>a <see cref="T:System.UInt32" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="RightPadding">
      <MemberSignature Language="C#" Value="public uint RightPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 RightPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("right-padding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The padding to insert at the right of the child widget.</summary>
        <value>a <see cref="T:System.UInt32" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (float xalign, float yalign, float xscale, float yscale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(float32 xalign, float32 yalign, float32 xscale, float32 yscale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xalign" Type="System.Single" />
        <Parameter Name="yalign" Type="System.Single" />
        <Parameter Name="xscale" Type="System.Single" />
        <Parameter Name="yscale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xalign">The horizontal alignment of the child widget, from 0 (left) to 1 (right).</param>
        <param name="yalign">The vertical alignment of the child widget, from 0 (top) to 1 (bottom).</param>
        <param name="xscale">The amount that the child widget expands horizontally to fill up unused space, from 0 to 1.</param>
        <param name="yscale">The amount that the child widget expands vertically to fill up unused space, from 0 to 1.</param>
        <summary>Adjusts all the alignment and scale properties.</summary>
        <remarks>
          <para>For the scale parameters, a value of 0 indicates that the child widget should never expand. A value of 1 indicates that the child widget will expand to fill all of the space allocated for the Alignment.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPadding">
      <MemberSignature Language="C#" Value="public void SetPadding (uint padding_top, uint padding_bottom, uint padding_left, uint padding_right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPadding(unsigned int32 padding_top, unsigned int32 padding_bottom, unsigned int32 padding_left, unsigned int32 padding_right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding_top" Type="System.UInt32" />
        <Parameter Name="padding_bottom" Type="System.UInt32" />
        <Parameter Name="padding_left" Type="System.UInt32" />
        <Parameter Name="padding_right" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="padding_top">a <see cref="T:System.UInt32" /></param>
        <param name="padding_bottom">a <see cref="T:System.UInt32" /></param>
        <param name="padding_left">a <see cref="T:System.UInt32" /></param>
        <param name="padding_right">a <see cref="T:System.UInt32" /></param>
        <summary>
	Sets the padding on the different sides of the widget.
	</summary>
        <remarks>
          <para>
	    The padding adds blank space to the vertical or horizontal sides 
	    of the widget. For instance, this can be used to indent the child 
	    widget towards the right by adding padding on the left.
	  </para>
          <para>
	    This is a convenience method; the properties can also
	    be set directly.
	  </para>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="TopPadding">
      <MemberSignature Language="C#" Value="public uint TopPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 TopPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("top-padding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The padding to insert at the top of the child widget.</summary>
        <value>a <see cref="T:System.UInt32" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Xalign">
      <MemberSignature Language="C#" Value="public float Xalign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Xalign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("xalign")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Manage the horizontal alignment of the child widget.</summary>
        <value>The child widget's current horizontal alignment.</value>
        <remarks>
          <para>This property is a value between 0 and 1, where 0 indicates no child expansion, and 1 indicates the child expands to fill the Alignment's allocated horizontal size.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xscale">
      <MemberSignature Language="C#" Value="public float Xscale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Xscale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("xscale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Manage the horizontal expansion of the child widget.</summary>
        <value>The current horizontal expansion of the child widget.</value>
        <remarks>
          <para>This property is a value between 0 and 1, where 0 indicates no child expansion, and 1 indicates the child expands to fill the Alignment's allocated horizontal size.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yalign">
      <MemberSignature Language="C#" Value="public float Yalign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Yalign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("yalign")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Manage the vertical alignment of the child widget.</summary>
        <value>The child widget's current vertical alignment.</value>
        <remarks>
          <para>This property is a value between 0 and 1 where 0 indicates alignment at the top of the container, and 1 indicates alignment at the bottom of the container.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yscale">
      <MemberSignature Language="C#" Value="public float Yscale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Yscale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("yscale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Manage the vertical expansion of the child widget.</summary>
        <value>The current vertical expansion of the child widget.</value>
        <remarks>
          <para>This property is a value between 0 and 1, where 0 indicates no child expansion, and 1 indicates the child expands to fill the Alignment's allocated vertical size.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
