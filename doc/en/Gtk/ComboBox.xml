<Type Name="ComboBox" FullName="Gtk.ComboBox">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class ComboBox : Gtk.Bin, Gtk.CellEditable, Gtk.CellLayout" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComboBox extends Gtk.Bin implements class GLib.IWrapper, class Gtk.CellEditable, class Gtk.CellLayout" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.Bin</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Gtk.CellEditable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Gtk.CellLayout</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A widget used to choose from a list of items.</summary>
    <remarks>
      <example>
        <code lang="C#">
using System;
using Gtk;

class ComboBoxSample
{
	static void Main ()
	{
		new ComboBoxSample ();
	}

	ComboBoxSample ()
	{
		Application.Init ();

		Window win = new Window ("ComboBoxSample");
		win.DeleteEvent += new DeleteEventHandler (OnWinDelete);

		ComboBox combo = ComboBox.NewText ();
		for (int i = 0; i &lt; 5; i ++)
			combo.AppendText ("item " + i);
		combo.Changed += new EventHandler (OnComboBoxChanged);

		win.Add (combo);

		win.ShowAll ();
		Application.Run ();
	}

	void OnComboBoxChanged (object o, EventArgs args)
	{
		ComboBox combo = o as ComboBox;
		if (o == null)
			return;

		TreeIter iter;

		if (combo.GetActiveIter (out iter))
			Console.WriteLine ((string) combo.Model.GetValue (iter, 0));
	}

	void OnWinDelete (object obj, DeleteEventArgs args)
	{
		Application.Quit ();
	}
}
  </code>
      </example>
    </remarks>
    <since version="Gtk# 2.4" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <remarks>
          <example>
            <code lang="C#">
Gtk.ComboBox cb = new ComboBox();
cb.Clear();
CellRendererText cell = new CellRendererText();
cb.PackStart(cell, false);
cb.AddAttribute(cell, "text", 0);
ListStore store = new ListStore(typeof (string));
cb.Model = store;

store.AppendValues ("Hello");
store.AppendValues ("Gtk");
store.AppendValues ("ComboBox");
  </code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComboBox (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Internal constructor</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox (Gtk.TreeModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Gtk.TreeModel model) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="model" Type="Gtk.TreeModel" />
      </Parameters>
      <Docs>
        <param name="model">a <see cref="T:Gtk.TreeModel" /></param>
        <summary>Creates a new <see cref="T:Gtk.ComboBox" /> that uses <paramref name="model" /></summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <summary>Internal constructor</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox (string[] entries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] entries) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entries" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="entries">A list of string values for the combo entries.</param>
        <summary>Creates a Combo box from a list of values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="public int Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("active")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The index of the currently active item.</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>-1 if there is no active item.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveText">
      <MemberSignature Language="C#" Value="public string ActiveText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActiveText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The currently active string in <see cref="T:Gtk.ComboBox" />.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>
          <see langword="null" /> if no active item is selected.
<block subset="none" type="note"><para>You can only use this function with combo boxes constructed with <see cref="M:Gtk.ComboBox.NewText()" />.
  </para></block></remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (Gtk.CellRenderer cell, string attribute, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(class Gtk.CellRenderer cell, string attribute, int32 column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="attribute" Type="System.String" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="attribute">a <see cref="T:System.String" />, parameter on <paramref name="cell" /> to be set from the value</param>
        <param name="column">a <see cref="T:System.Int32" />, column of the model to get a value from.</param>
        <summary>
	  Adds an attribute mapping to the list in this combo box. 
	</summary>
        <remarks>
	  The <paramref name="column" /> is the column of the model to get a value from, and the <paramref name="attribute" /> is the
	  parameter on <paramref name="cell" /> to be set from the value. So for example if column 2
	  of the model contains strings, you could have the "text" attribute of a
	  <see cref="T:Gtk.ComboBox" /> get its values from column 2.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTearoffs">
      <MemberSignature Language="C#" Value="public bool AddTearoffs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddTearoffs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("add-tearoffs")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">a <see cref="T:System.String" /></param>
        <summary>Appends <paramref name="text" /> to the list of strings stored in <see cref="T:Gtk.ComboBox" />.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>You can only use this function with combo boxes constructed with <see cref="M:Gtk.ComboBox.NewText()" />.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Gtk.CellRenderer[] Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.CellRenderer[] Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.CellRenderer[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("changed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the selected item is changed.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unsets all the mappings on all renderers for this combo box.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAttributes">
      <MemberSignature Language="C#" Value="public void ClearAttributes (Gtk.CellRenderer cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAttributes(class Gtk.CellRenderer cell) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
      </Parameters>
      <Docs>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <summary>
	  Clears all existing attributes previously set with
	  <see cref="M:Gtk.ComboBox.SetAttributes" />.
	</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnSpanColumn">
      <MemberSignature Language="C#" Value="public int ColumnSpanColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnSpanColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("column-span-column")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The column with column span information.</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>The column span column contains integers which indicate how many columns an item should span.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingDone">
      <MemberSignature Language="C#" Value="public event EventHandler EditingDone;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EditingDone" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("editing_done")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="FinishEditing">
      <MemberSignature Language="C#" Value="public void FinishEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishEditing() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="FocusOnClick">
      <MemberSignature Language="C#" Value="public bool FocusOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FocusOnClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("focus-on-click")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets or gets whether the combo box will grab focus when it is clicked with the mouse.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>Making mouse clicks not grab focus is useful in places like toolbars where you don't want the keyboard focus removed from the main area of the application.</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="GetActiveIter">
      <MemberSignature Language="C#" Value="public bool GetActiveIter (out Gtk.TreeIter iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetActiveIter(valuetype Gtk.TreeIter iter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iter" Type="Gtk.TreeIter&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="iter">a <see cref="T:Gtk.TreeIter" /></param>
        <summary>Gets the iter that points to the current active item, if it exists.</summary>
        <returns>a <see cref="T:System.Boolean" />, <see langword="true" /> if it exists.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native GLib.GType value for Combo.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFrame">
      <MemberSignature Language="C#" Value="public bool HasFrame { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFrame" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("has-frame")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="InsertText">
      <MemberSignature Language="C#" Value="public void InsertText (int position, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertText(int32 position, string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="position">An index to insert <paramref name="text" />.</param>
        <param name="text">a <see cref="T:System.String" /> to insert</param>
        <summary>Inserts <paramref name="text" /> at <paramref name="position" /> in the list of strings stored in <see cref="T:Gtk.ComboBox" />.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>You can only use this function with combo boxes constructed with <see cref="M:Gtk.ComboBox.NewText()" />.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Gtk.TreeModel Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.TreeModel Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("model")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.TreeModel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The <see cref="T:Gtk.TreeModel" /> which is acting as data source for the <see cref="T:Gtk.ComboBox" />.</summary>
        <value>a <see cref="T:Gtk.TreeModel" /></value>
        <remarks>Will unset a previously set model (if applicable). If model is <see langword="null" />, then it will unset the model.


<block subset="none" type="note"><para>setting the model does not clear the cell renderers, you have to call <see cref="M:Gtk.ComboBox.Clear()" /> yourself if you need to set up different cell renderers for the new model.
  </para></block></remarks>
      </Docs>
    </Member>
    <Member MemberName="NewText">
      <MemberSignature Language="C#" Value="public static Gtk.ComboBox NewText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gtk.ComboBox NewText() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.ComboBox</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convenience function which constructs a new text combo box, which is a <see cref="T:Gtk.ComboBox" /> just displaying strings.</summary>
        <returns>a <see cref="T:Gtk.ComboBox" /></returns>
        <remarks>If you use this function to create a text combo box, you should only manipulate its data source with the following convenience functions: <see cref="M:Gtk.ComboBox.AppendText()" />, <see cref="M:Gtk.ComboBox.InsertText()" />, <see cref="M:Gtk.ComboBox.PrependText()" /> and <see cref="M:Gtk.ComboBox.RemoveText()" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideChanged", Type=typeof(Gtk.ComboBox))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="E:Gtk.ComboBox.Changed" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="E:Gtk.ComboBox.Changed" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingDone">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingDone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingDone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideEditingDone", Type=typeof(Gtk.ComboBox))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.ComboBox.EditingDone" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.ComboBox.EditingDone" /> event.</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="OnWidgetRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnWidgetRemoved ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWidgetRemoved() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideWidgetRemoved", Type=typeof(Gtk.ComboBox))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.ComboBox.WidgetRemoved" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.ComboBox.WidgetRemoved" /> event.</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="PackEnd">
      <MemberSignature Language="C#" Value="public void PackEnd (Gtk.CellRenderer cell, bool expand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PackEnd(class Gtk.CellRenderer cell, bool expand) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="expand" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="expand">a <see cref="T:System.Boolean" /></param>
        <summary>Adds the <paramref name="cell" /> to the end of the combo box.</summary>
        <remarks>
	  If <paramref name="expand" /> is <see langword="false" />, then the
	  <paramref name="cell" /> is allocated no more space than it needs. Any unused space is
	  divided evenly between cells for which <paramref name="expand" /> is <see langword="true" />.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="PackStart">
      <MemberSignature Language="C#" Value="public void PackStart (Gtk.CellRenderer cell, bool expand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PackStart(class Gtk.CellRenderer cell, bool expand) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="expand" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="expand">a <see cref="T:System.Boolean" /></param>
        <summary>Packs the <paramref name="cell" /> into the beginning of the combo box.</summary>
        <remarks>
	  If <paramref name="expand" /> is <see langword="false" />, then the
	  <paramref name="cell" /> is allocated no more space than it needs. Any unused space is
	  divided evenly between cells for which <paramref name="expand" /> is <see langword="true" />.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popdown">
      <MemberSignature Language="C#" Value="public void Popdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Popdown() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hides the menu or dropdown list of this <see cref="T:Gtk.ComboBox" />.</summary>
        <remarks>This function is mostly intended for use by accessibility technologies; applications should have little use for it.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public void Popup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Popup() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pops up the menu or dropdown list of <see cref="T:Gtk.ComboBox" />.</summary>
        <remarks>This function is mostly intended for use by accessibility technologies; applications should have little use for it.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopupAccessible">
      <MemberSignature Language="C#" Value="public Atk.Object PopupAccessible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Atk.Object PopupAccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Atk.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Atk.Object" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="PopupShown">
      <MemberSignature Language="C#" Value="public bool PopupShown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopupShown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("popup-shown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the popup is currently visible.</summary>
        <value>if <see langword="true" /> the popup is visible.</value>
        <remarks />
        <since version="Gtk# 2.10" />
      </Docs>
    </Member>
    <Member MemberName="PrependText">
      <MemberSignature Language="C#" Value="public void PrependText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrependText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">a <see cref="T:System.String" /></param>
        <summary>Prepends <paramref name="string" /> to the list of strings stored in the <see cref="T:Gtk.ComboBox" />.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>You can only use this function with combo boxes constructed with <see cref="M:Gtk.ComboBox.NewText()" />.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveText">
      <MemberSignature Language="C#" Value="public void RemoveText (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveText(int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">a <see cref="T:System.Int32" /></param>
        <summary>Removes text at <paramref name="position" /> in the list of strings stored in <see cref="T:Gtk.ComboBox" />.</summary>
        <remarks>
          <block subset="none" type="note">
            <para>You can only use this function with combo boxes constructed with <see cref="M:Gtk.ComboBox.NewText()" />.
  </para>
          </block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveWidget">
      <MemberSignature Language="C#" Value="public void RemoveWidget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveWidget() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="Reorder">
      <MemberSignature Language="C#" Value="public void Reorder (Gtk.CellRenderer cell, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reorder(class Gtk.CellRenderer cell, int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="position">a <see cref="T:System.Int32" /></param>
        <summary>Re-inserts <paramref name="cell" /> at <paramref name="position" />.</summary>
        <remarks>
	  Note that <paramref name="cell" /> has already to be packed
	  into the combo box for this to function properly.
	</remarks>
      </Docs>i
    </Member>
    <Member MemberName="RowSeparatorFunc">
      <MemberSignature Language="C#" Value="public Gtk.TreeViewRowSeparatorFunc RowSeparatorFunc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.TreeViewRowSeparatorFunc RowSeparatorFunc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.TreeViewRowSeparatorFunc</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Callback function to indicate whether or not a given row of the combo box should be rendered as a separator.</summary>
        <value>a <see cref="T:Gtk.TreeViewRowSeparatorFunc" /></value>
        <remarks />
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="RowSpanColumn">
      <MemberSignature Language="C#" Value="public int RowSpanColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpanColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("row-span-column")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The column with row span information</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>The row span column contains integers which indicate how many rows an item should span.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActiveIter">
      <MemberSignature Language="C#" Value="public void SetActiveIter (Gtk.TreeIter iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetActiveIter(valuetype Gtk.TreeIter iter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iter" Type="Gtk.TreeIter" />
      </Parameters>
      <Docs>
        <param name="iter">a <see cref="T:Gtk.TreeIter" /></param>
        <summary>Sets the current active item to be the one referenced by iter.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttributes">
      <MemberSignature Language="C#" Value="public void SetAttributes (Gtk.CellRenderer cell, object[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttributes(class Gtk.CellRenderer cell, object[] attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="attrs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="attrs">a <see cref="T:System.Object" /></param>
        <summary>Sets the attribute to column bindings for a renderer.</summary>
        <remarks>The <paramref name="attrs" /> array should consist of pairs of attribute name and column indexes.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCellDataFunc">
      <MemberSignature Language="C#" Value="public void SetCellDataFunc (Gtk.CellRenderer cell, Gtk.CellLayoutDataFunc func);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCellDataFunc(class Gtk.CellRenderer cell, class Gtk.CellLayoutDataFunc func) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="func" Type="Gtk.CellLayoutDataFunc" />
      </Parameters>
      <Docs>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="func">a <see cref="T:Gtk.CellLayoutDataFunc" /></param>
        <summary>Sets a data function to use for the combo box.</summary>
        <remarks>
	 The data function
	 is used instead of the standard attributes mapping for setting the
	 column value, and should set the value of the cell renderer 
	 as appropriate. <paramref name="func" /> may be <see langword="null" /> to remove an older one.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartEditing">
      <MemberSignature Language="C#" Value="public void StartEditing (Gdk.Event evnt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartEditing(class Gdk.Event evnt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evnt" Type="Gdk.Event" />
      </Parameters>
      <Docs>
        <param name="evnt">a <see cref="T:Gdk.Event" /></param>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="TearoffTitle">
      <MemberSignature Language="C#" Value="public string TearoffTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TearoffTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("tearoff-title")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A title to display when the popup is torn off.</summary>
        <value>defaults to <see cref="M:System.String.Empty" />.</value>
        <remarks />
        <since version="Gtk# 2.10" />
      </Docs>
    </Member>
    <Member MemberName="WidgetRemoved">
      <MemberSignature Language="C#" Value="public event EventHandler WidgetRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WidgetRemoved" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("remove_widget")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="WrapWidth">
      <MemberSignature Language="C#" Value="public int WrapWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WrapWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("wrap-width")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wrap width for laying out the items in a grid.</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>
          <para>
Allowed values: &gt;= 0
</para>
          <para>
Default value: 0
</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
