<Type Name="Timeout" FullName="Gtk.Timeout">
  <TypeSignature Language="C#" Value="public class Timeout" Maintainer="John Luke" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timeout extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Replaced by GLib.Timeout")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Registers a method to be called periodically.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Internal Constructor</summary>
        <remarks>This should not be called directly by typical applications.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static uint Add (uint interval, Gtk.Function function);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Add(unsigned int32 interval, class Gtk.Function function) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Replaced by GLib.Timeout.Add")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.UInt32" />
        <Parameter Name="function" Type="Gtk.Function" />
      </Parameters>
      <Docs>
        <param name="interval">number of miliseconds between function calls</param>
        <param name="function">delegate that will be called until it return false</param>
        <summary>Registers a <paramref name="function" /> to be called periodically.</summary>
        <returns>a <see cref="T:System.UInt32" /></returns>
        <remarks>The <paramref name="function" /> will be called repeatedly after <paramref name="interval" /> milliseconds until it returns <see langword="false" /> at which point the <see cref="T:Gtk.Timeout" /> is destroyed and will not be called again.
<block subset="none" type="note"><para>
	The first execution of the callback <paramref name="function" /> will only occur after the <paramref name="interval" /> has elapsed. In other words, it won't be executed right away after calling <see cref="T:Gtk.Timeout.Add" />.
  </para></block></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFull">
      <MemberSignature Language="C#" Value="public static uint AddFull (uint interval, Gtk.Function function, Gtk.CallbackMarshal marshal, IntPtr data, Gtk.DestroyNotify destroy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 AddFull(unsigned int32 interval, class Gtk.Function function, class Gtk.CallbackMarshal marshal, native int data, class Gtk.DestroyNotify destroy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Replaced by GLib.Timeout.Add")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.UInt32" />
        <Parameter Name="function" Type="Gtk.Function" />
        <Parameter Name="marshal" Type="Gtk.CallbackMarshal" />
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="destroy" Type="Gtk.DestroyNotify" />
      </Parameters>
      <Docs>
        <param name="interval">a <see cref="T:System.UInt32" /></param>
        <param name="function">a <see cref="T:Gtk.Function" /></param>
        <param name="marshal">a <see cref="T:Gtk.CallbackMarshal" /></param>
        <param name="data">a <see cref="T:System.IntPtr" /></param>
        <param name="destroy">a <see cref="T:Gtk.DestroyNotify" /></param>
        <summary>Registers a <paramref name="function" /> to be called periodically.</summary>
        <returns>a <see cref="T:System.UInt32" /></returns>
        <remarks>The <paramref name="function" /> will be called repeatedly after <paramref name="interval" /> milliseconds until it returns <see langword="false" /> at which point the <see cref="T:Gtk.Timeout" /> is destroyed and will not be called again.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public static void Remove (uint timeout_handler_id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Remove(unsigned int32 timeout_handler_id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Replaced by GLib.Source.Remove")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout_handler_id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="timeout_handler_id">a <see cref="T:System.UInt32" /></param>
        <summary>Removes the given timeout destroying all information about it.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
