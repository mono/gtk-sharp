<Type Name="TreeNode" FullName="Gtk.TreeNode">
  <TypeSignature Language="C#" Maintainer="Mike Kestner" Value="public abstract class TreeNode : Gtk.ITreeNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TreeNode extends System.Object implements class Gtk.ITreeNode" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Gtk.ITreeNode</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>TreeNode abstract class</summary>
    <remarks>
      <para>
        Convenience class for deriving ITreeNode implementing objects for 
        <see cref="T:Gtk.NodeStore" /> implementations. This class can be subclassed
        to quickly implement a node type without having to implement the tree building
        and navigational aspects of the <see cref="T:Gtk.ITreeNode" /> interface.
      </para>
      <para>
        The following example shows a simple <see cref="T:Gtk.TreeNode" /> subclass:
      </para>
      <example>
        <code lang="C#">
[TreeNode(ColumnCount=1)]
public class MyTreeNode : TreeNode {
	string level;
    
	public MyTreeNode (string level)
	{
		this.level = level;
	}
    
	[TreeNodeValue(Column=0)]
	public string Level { 
		get { 
			return level; 
		} 
		set {
			level = value;
			OnChanged ();
		}
	}
}
        </code>
      </example>
      <para>
        The <see cref="T:Gtk.TreeNode" /> base class provides all the <see cref="T:Gtk.ITreeNode" /> 
        details and MyTreeNode uses <see cref="T:Gtk.TreeNode.OnChanged" /> to notify of tree related 
        node changes.
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>TreeNode constructor</summary>
        <remarks>Default constructor..</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (Gtk.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class Gtk.TreeNode child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">a <see cref="T:Gtk.TreeNode" /></param>
        <summary>Appends a child to the node</summary>
        <remarks>Adds the specified <paramref name="child" /> to this <see cref="T:Gtk.ITreeNode" />. 
          The <paramref name="child" /> is added to the end of the children list, the 
          <see cref="P:Gtk.TreeNode.Parent" /> property of <paramref name="child" /> is set to 
          this node, and the <see cref="E:Gtk.TreeNode.ChildAdded" /> event is raised.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (Gtk.TreeNode child, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class Gtk.TreeNode child, int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.TreeNode" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">a <see cref="T:Gtk.TreeNode" /></param>
        <param name="position">Position among the node's children to insert <paramref name="child" /></param>
        <summary>Inserts a child at the given position</summary>
        <remarks>Adds the specified <paramref name="child" /> to this <see cref="T:Gtk.ITreeNode" />. 
          The <paramref name="child" /> is added to the children list before the child currently
	  at position <paramref name="position" />, the <see cref="P:Gtk.TreeNode.Parent" />
	  property of <paramref name="child" /> is set to this node, and the
	  <see cref="E:Gtk.TreeNode.ChildAdded" /> event is raised.</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Changed event</summary>
        <remarks>
          Raised when the contents of the <see cref="T:Gtk.ITreeNode" /> change.
          Use <see cref="M:Gtk.ITreeNode.OnChange" /> for a convenient way to raise the event.
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildAdded">
      <MemberSignature Language="C#" Value="public event Gtk.TreeNodeAddedHandler ChildAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.TreeNodeAddedHandler ChildAdded" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.TreeNodeAddedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ChildAdded event</summary>
        <remarks>Raised when a child <see cref="T:Gtk.ITreeNode" /> is added to the node.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildCount">
      <MemberSignature Language="C#" Value="public int ChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChildCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ChildCount</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>Read-only.  The number of <see cref="T:Gtk.ITreeNode" /> children of this node.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildRemoved">
      <MemberSignature Language="C#" Value="public event Gtk.TreeNodeRemovedHandler ChildRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.TreeNodeRemovedHandler ChildRemoved" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.TreeNodeRemovedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ChildRemoved event</summary>
        <remarks>Raised when a child <see cref="T:Gtk.ITreeNode" /> is removed from the node.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public int ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ID property</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>Read-only.  Provides a unique identifier for all <see cref="T:Gtk.TreeNode" /> instances.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">a <see cref="T:System.Object" /></param>
        <summary>IndexOf method</summary>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>
          Returns the child index of <paramref name="o" /> 
          or -1 if <paramref name="o" /> is not a child of this <see cref="T:Gtk.TreeNode" />.
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Gtk.ITreeNode this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.ITreeNode Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.ITreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">a <see cref="T:System.Int32" /></param>
        <summary>Child indexer</summary>
        <value>a <see cref="T:Gtk.ITreeNode" /></value>
        <remarks>
          Returns the child at position <paramref name="index" /> in the list of children
          for this <see cref="T:Gtk.ITreeNode" />.
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>OnChanged method</summary>
        <remarks>Raises the Changed event. Call this method if any column values of the node change.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Gtk.ITreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.ITreeNode Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.ITreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Parent property</summary>
        <value>a <see cref="T:Gtk.ITreeNode" /></value>
        <remarks>Read-only.  The parent <see cref="T:Gtk.ITreeNode" /> for this node.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Gtk.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class Gtk.TreeNode child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">a <see cref="T:Gtk.TreeNode" /></param>
        <summary>RemoveChild method</summary>
        <remarks>Removes the specified <paramref name="child" /> from this <see cref="T:Gtk.ITreeNode" />.
          The <see cref="P:Gtk.TreeNode.Parent" /> property of <paramref name="child" /> is set to 
          <see langword="null" /> and the <see cref="E:Gtk.TreeNode.ChildRemoved" /> event is raised.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
