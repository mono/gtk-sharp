<Type Name="Curve" FullName="Gtk.Curve">
  <TypeSignature Language="C#" Maintainer="Hector Gomez M" Value="public class Curve : Gtk.DrawingArea" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Curve extends Gtk.DrawingArea" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.DrawingArea</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>The <see cref="T:Gtk.Curve" /> widget allows the user to edit a curve covering a range of values.</summary>
    <remarks>
      <para>
      The <see cref="T:Gtk.Curve" /> widget allows the user to edit a curve covering a range of values. It is typically used to fine-tune color balances in graphics applications like the Gimp. The <see cref="T:Gtk.Curve" /> widget has 3 modes of operation - spline, linear and free. In spline mode the user places points on the curve which are automatically connected together into a smooth curve. In linear mode the user places points on the curve which are connected by straight lines. In free mode the user can draw the points of the curve freely, and they are not connected at all.
     </para>
      <para>
      NOTE: this widget is considered too specialized/little-used for GTK+, and will in the future be moved to some other package. If your application needs this widget, feel free to use it, as the widget does work and is useful in some applications; it's just not of general interest. However, we are not accepting new features for the widget, and it will eventually move out of the GTK+ distribution. (FIXME: will it remain in GTK#?)
     </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Curve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Constructor.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Curve (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Protected Constructor.</summary>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Curve (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">Pointer to the C object.</param>
        <summary>Internal constructor</summary>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveType">
      <MemberSignature Language="C#" Value="public Gtk.CurveType CurveType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gtk.CurveType CurveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("curve-type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.CurveType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Sets the type of the curve.</summary>
        <value>A <see cref="T:Gtk.CurveType" />.</value>
        <remarks>
          <para>
          The curve will remain unchanged except when changing from a free curve to a linear or spline curve, in which case the curve will be changed as little as possible.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveTypeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurveTypeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurveTypeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("curve_type_changed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the curve type has been changed.</summary>
        <remarks>
          <para>
          The curve type can be changed explicitly with a call to <see cref="P:Gtk.Curve.CurveType" />. It is also changed as a side-effect of calling <see cref="M:Gtk.Curve.Reset" /> or <see cref="P:Gtk.Curve.Gamma" />.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma">
      <MemberSignature Language="C#" Value="public float Gamma { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Gamma" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Recomputes the entire curve using the given gamma value.</summary>
        <value>A gamma value.</value>
        <remarks>
          <para>
          A gamma value of 1 results in a straight line. Values greater than 1 result in a curve above the straight line. Values less than 1 result in a curve below the straight.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVector">
      <MemberSignature Language="C#" Value="public void GetVector (int veclen, float[] vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetVector(int32 veclen, float32[] vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="veclen" Type="System.Int32" />
        <Parameter Name="vector" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="veclen">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.Curve" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxX">
      <MemberSignature Language="C#" Value="public float MaxX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("max-x")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The maximum x value of the gamma curve.</summary>
        <value>A max x value.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MaxY">
      <MemberSignature Language="C#" Value="public float MaxY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("max-y")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The maximum y value of the gamma curve.</summary>
        <value>A max y value.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MinX">
      <MemberSignature Language="C#" Value="public float MinX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("min-x")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The minimum x value of the gamma curve.</summary>
        <value>A min x value.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MinY">
      <MemberSignature Language="C#" Value="public float MinY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("min-y")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The minimum y value of the gamma curve.</summary>
        <value>A min y value.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnCurveTypeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurveTypeChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurveTypeChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideCurveTypeChanged", Type=typeof(Gtk.Curve))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.Curve.CurveTypeChanged" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.Curve.CurveTypeChanged" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the curve to a straight line from the minimum x and y values to the maximum x and y values (i.e. from the bottom-left to the top-right corners).</summary>
        <remarks>
          <para>
          Resets the curve to a straight line from the minimum x and y values to the maximum x and y values (i.e. from the bottom-left to the top-right corners). The curve type is not changed.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public void SetRange (float min_x, float max_x, float min_y, float max_y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRange(float32 min_x, float32 max_x, float32 min_y, float32 max_y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min_x" Type="System.Single" />
        <Parameter Name="max_x" Type="System.Single" />
        <Parameter Name="min_y" Type="System.Single" />
        <Parameter Name="max_y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="min_x">The minimum x value.</param>
        <param name="max_x">The maximum x value.</param>
        <param name="min_y">The minimum y value.</param>
        <param name="max_y">The maximum y value.</param>
        <summary>Sets the minimum and maximum x and y values of the curve.</summary>
        <remarks>
          <para>
          Sets the minimum and maximum x and y values of the curve. The curve is also reset with a call to <see cref="M:Gtk.Curve.Reset" />.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVector">
      <MemberSignature Language="C#" Value="public void SetVector (int veclen, float[] vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVector(int32 veclen, float32[] vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="veclen" Type="System.Int32" />
        <Parameter Name="vector" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="veclen">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
