<Type Name="Label" FullName="Gtk.Label">
  <TypeSignature Language="C#" Maintainer="Duncan Mak" Value="public class Label : Gtk.Misc" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Label extends Gtk.Misc" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.Misc</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>A widget that displays a small to medium amount of text</summary>
    <remarks>
      <para>
        This widget displays a small to medium amount of text, it is
        the widget used by other widgets, such as <see cref="T:Gtk.Button" /> and <see cref="T:Gtk.MenuItem" /> for
        displaying text.
      </para>
      <para>
        Labels may contain mnemonics; mnemonics are underlined
        characters in the label, used for keyboard navigation. To
        provide the mnemonic, put an underscore before the mnemonic
        character, such as "_File".
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Gtk.Label" /> without text.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Label (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Internal constructor</summary>
        <remarks>This is not typically used by C# code.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">Pointer to the C object.</param>
        <summary>Internal constructor</summary>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string str) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The text of the label. Pass <see langword="null" /> for no text.</param>
        <summary>
          Creates a new label with the given text inside it. You can
          pass <see langword="null" /> to get an empty label
          widget.
        </summary>
        <remarks>
          <para>
            Creates a new label with the given text inside it. You can
            pass <see langword="null" /> to get an empty label
            widget. If <paramref name="str" /> contains an underscore, 
            the <see cref="P:Gtk.Lable.UseUnderline" /> property is 
            automatically set to <see langword="true" />.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Angle">
      <MemberSignature Language="C#" Value="public double Angle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Angle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("angle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Double" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public Pango.AttrList Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Pango.AttrList Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Pango.AttrList</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The attribute list set on the label.</summary>
        <value>the attribute list set on the label</value>
        <remarks>
          <para>
            This function does not reflect attributes that come from
            the labels markup (see <see cref="P:Gtk.Label.Markup" />). If you
            want to get the effective attributes for the label, use
            <see cref="T:Pango.Layout.Attribute" /> on the label's
            <see cref="P:Gtk.Label.Layout" /> property.
          </para>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyClipboard">
      <MemberSignature Language="C#" Value="public event EventHandler CopyClipboard;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CopyClipboard" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("copy_clipboard")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when text is copied to the clipboard.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorPosition">
      <MemberSignature Language="C#" Value="public int CursorPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("cursor-position")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current position of the insertion cursor in characters.</summary>
        <value>The current position of the insertion cursor in characters</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ellipsize">
      <MemberSignature Language="C#" Value="public Pango.EllipsizeMode Ellipsize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Pango.EllipsizeMode Ellipsize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("ellipsize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Pango.EllipsizeMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Pango.EllipsizeMode" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public void Get (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Get(string str) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">a <see cref="T:System.String" /></param>
        <summary>Deprecated; do not use in new code.</summary>
        <remarks>Gets the current string of text within the Label
        object and writes it to <paramref name="str" />. It does not make a copy of this
        string so you must not write to it.</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutOffsets">
      <MemberSignature Language="C#" Value="public void GetLayoutOffsets (out int x, out int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetLayoutOffsets(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectionBounds">
      <MemberSignature Language="C#" Value="public bool GetSelectionBounds (out int start, out int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelectionBounds(int32 start, int32 end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="end" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.Label" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Justify">
      <MemberSignature Language="C#" Value="public Gtk.Justification Justify { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gtk.Justification Justify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("justify")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.Justification</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The alignment of the lines in the text of the label relative to each other</summary>
        <value>The justification of the label</value>
        <remarks>
          <para>
            Sets the alignment of the lines in the text of the label
            relative to each other. <see cref="T:Gtk.Justification.Left" /> is the default value
            when the widget is first created with <see cref="C:Gtk.Label" />. If you instead want to set the
            alignment of the label as a whole, set <see cref="P:Gtk.Misc.Alignment" /> instead. This has no effect
            on labels containing only a single line.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelProp">
      <MemberSignature Language="C#" Value="public string LabelProp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LabelProp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("label")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The text from a label widget including any embedded underlines indicating mnemonics and Pango markup.</summary>
        <value>The text of the label widget.</value>
        <remarks>You can include markup tags to change your text appearance. See <see cref="P:Gtk.Label.UseMarkup" /> for more information.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public Pango.Layout Layout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Pango.Layout Layout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Pango.Layout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:Pango.Layout" /> used to display the label.</summary>
        <value> the <see cref="T:Pango.Layout" /> for this label</value>
        <remarks>
          <para>
            Gets the <see cref="T:Pango.Layout" /> used to display the label. The layout
            is useful to e.g. convert text positions to pixel
            positions, in combination with <see cref="M:Gtk.Label.GetLayoutOffset" />. The returned layout
            is owned by the label so need not be freed by the caller.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWrap">
      <MemberSignature Language="C#" Value="public bool LineWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LineWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Toggles line wrapping within the GtkLabel widget.</summary>
        <value>
          <see langword="true" /> if the lines of the label are automatically wrapped.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LineWrapMode">
      <MemberSignature Language="C#" Value="public Pango.WrapMode LineWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Pango.WrapMode LineWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("wrap-mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Pango.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the wrap mode for the label.</summary>
        <value>a <see cref="T:Pango.WrapMode" />.</value>
        <remarks />
        <since version="Gtk# 2.10" />
      </Docs>
    </Member>
    <Member MemberName="Markup">
      <MemberSignature Language="C#" Value="public string Markup { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Markup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Parses str which is marked up with the Pango text markup language</summary>
        <value>a GtkLabel</value>
        <remarks>
          <para>
            Parses <paramref name="value" /> which is marked up with the
            Pango text markup language, setting the text of the label and
            attribute list based on the parse results.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupWithMnemonic">
      <MemberSignature Language="C#" Value="public string MarkupWithMnemonic { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MarkupWithMnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>
          Parses <paramref name="value" /> which is marked up with the
          Pango text markup language, setting the text of the label and
          attribute list based on the parse results.
        </summary>
        <value>a new label widget</value>
        <remarks>
          <para>
            Parses <paramref name="value" /> which is marked up with the
            Pango text markup language, setting the text of the label and
            attribute list based on the parse results. If characters
            in the string are preceded by an underscore, they are underlined
            indicating that they represent a keyboard accelerator
            called a mnemonic.
          </para>
          <para>
            The mnemonic key can be used to activate another widget,
            chosen automatically, or explicitly using <see cref="M:Gtk.Label.MnemonicWidget" />.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidthChars">
      <MemberSignature Language="C#" Value="public int MaxWidthChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWidthChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("max-width-chars")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="MnemonicKeyval">
      <MemberSignature Language="C#" Value="public uint MnemonicKeyval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MnemonicKeyval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("mnemonic-keyval")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The mnemonic accelerator key for this label.</summary>
        <value>The mnemonic accelerator key for this label.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MnemonicWidget">
      <MemberSignature Language="C#" Value="public Gtk.Widget MnemonicWidget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.Widget MnemonicWidget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("mnemonic-widget")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The widget to be activated when the label's mnemonic key is pressed.</summary>
        <value>The widget to be activated when the label's mnemonic key is pressed.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCursor">
      <MemberSignature Language="C#" Value="public event Gtk.MoveCursorHandler MoveCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.MoveCursorHandler MoveCursor" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("move_cursor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.MoveCursorHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the cursor is moved.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static Gtk.Label New (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gtk.Label New(string str) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.Label</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">a <see cref="T:System.String" /></param>
        <summary>Basic constructor.</summary>
        <returns>a <see cref="T:Gtk.Label" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnCopyClipboard">
      <MemberSignature Language="C#" Value="protected virtual void OnCopyClipboard ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCopyClipboard() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideCopyClipboard", Type=typeof(Gtk.Label))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.Label.CopyClipboard" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.Label.CopyClipboard" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMoveCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnMoveCursor (Gtk.MovementStep step, int count, bool extend_selection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMoveCursor(valuetype Gtk.MovementStep step, int32 count, bool extend_selection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideMoveCursor", Type=typeof(Gtk.Label))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="step" Type="Gtk.MovementStep" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="extend_selection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="step">a <see cref="T:Gtk.MovementStep" /></param>
        <param name="count">a <see cref="T:System.Int32" /></param>
        <param name="extend_selection">a <see cref="T:System.Boolean" /></param>
        <summary>Default handler for the <see cref="M:Gtk.Label.MoveCursor" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.Label.MoveCursor" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopulatePopup">
      <MemberSignature Language="C#" Value="protected virtual void OnPopulatePopup (Gtk.Menu menu);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPopulatePopup(class Gtk.Menu menu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverridePopulatePopup", Type=typeof(Gtk.Label))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Gtk.Menu" />
      </Parameters>
      <Docs>
        <param name="menu">a <see cref="T:Gtk.Menu" /></param>
        <summary>Default handler for the <see cref="M:Gtk.Label.PopulatePopup" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.Label.PopulatePopup" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseUline">
      <MemberSignature Language="C#" Value="public uint ParseUline (string str1ng);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 ParseUline(string str1ng) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str1ng" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str1ng">a <see cref="T:System.String" /></param>
        <summary>Deprecated.</summary>
        <returns>a <see cref="T:System.UInt32" /></returns>
        <remarks>
	  Checks the string passed as the parameter for underscores,
	  and then underlines the characters following the
	  underscores. It will take the first underlined character in
	  a label and return it as a lower-case accelerator key,
	  e.g. _Save will return the accelerator key value for "s".
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("pattern")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>A string with _ characters in positions correspond to characters in the text to underline.</summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulatePopup">
      <MemberSignature Language="C#" Value="public event Gtk.PopulatePopupHandler PopulatePopup;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.PopulatePopupHandler PopulatePopup" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("populate_popup")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.PopulatePopupHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when a right-click pop-up menu is displayed</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="public bool Selectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("selectable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Toggle whether or not the label allow the user to select text from the label, for copy-and-paste.</summary>
        <value>
          <see langword="true" /> if the label is selectable, and
        <see langword="false" /> if not.
        </value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SelectionBound">
      <MemberSignature Language="C#" Value="public int SelectionBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("selection-bound")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The position of the opposite end of the selection from the cursor in characters.</summary>
        <value>The position of the opposite end of the selection from the cursor in characters.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectRegion">
      <MemberSignature Language="C#" Value="public void SelectRegion (int start_offset, int end_offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectRegion(int32 start_offset, int32 end_offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start_offset" Type="System.Int32" />
        <Parameter Name="end_offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start_offset">start offset (in characters not bytes)</param>
        <param name="end_offset">end offset (in characters not bytes)</param>
        <summary>Selects a range of characters in the label, if the label is selectable.</summary>
        <remarks>
          <para>
            Selects a range of characters in the label, if the label
            is selectable. See <see cref="P:Gtk.Label.Selectable" />. If the
            label is not selectable, this function has no effect. If
            <paramref name="start_offset" /> or
            <paramref name="end_offset" /> are -1, then the end of the
            label will be substituted.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleLineMode">
      <MemberSignature Language="C#" Value="public bool SingleLineMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleLineMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("single-line-mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The text within the <see cref="T:Gtk.Label" /> widget.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>
          <para>
            When setting the text within the <see cref="T:Gtk.Label" /> widget, it overwrites any text that was there before.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWithMnemonic">
      <MemberSignature Language="C#" Value="public string TextWithMnemonic { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextWithMnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Sets the text of the label</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Sets the text of the label. If characters in <paramref name="value" />
            are preceded by an underscore, they are
            underlined indicating that they represent a keyboard
            accelerator called a mnemonic. The mnemonic key can be
            used to activate another widget, chosen automatically, or
            explicitly using <see cref="M:Gtk.Label.MnemonicWidget" />.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMarkup">
      <MemberSignature Language="C#" Value="public bool UseMarkup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMarkup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("use-markup")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether the label's text is interpreted as marked up with the Pango text markup language ( more information at http://developer.gnome.org/doc/API/2.0/pango/PangoMarkupFormat.html ).</summary>
        <value>
          <see langword="true" /> if the label's text should be parsed for markup</value>
        <remarks>Here are a few examples of the markup you can use:
<list type="table"><listheader><term>Tag</term><description>Description</description></listheader><item><term>&lt;b&gt;</term><description>Bold</description></item><item><term>&lt;big&gt;</term><description>Makes font relatively larger</description></item><item><term>&lt;i&gt;</term><description>Italic</description></item><item><term>&lt;s&gt;</term><description>Strikethrough</description></item><item><term>&lt;sub&gt;</term><description>Subscript</description></item><item><term>&lt;sup&gt;</term><description>Superscript</description></item><item><term>&lt;small&gt;</term><description>Makes font relatively smaller</description></item><item><term>&lt;tt&gt;</term><description>Monospace font</description></item><item><term>&lt;u&gt;</term><description>Underline</description></item></list><example><code lang="C#">
	Gtk.Label label = new Gtk.Label();
	label.LabelProp = "The brown &lt;u&gt;fox&lt;/u&gt; etc. and the &lt;big&gt;lazy&lt;/big&gt; dog";
	label.UseMarkup = true;
  </code></example></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseUnderline">
      <MemberSignature Language="C#" Value="public bool UseUnderline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("use-underline")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>
          Whether an underline in the text indicates the next
          character should be used for the mnemonic accelerator key.
        </summary>
        <value>
          Whether an underline in the text indicates the next
          character should be used for the mnemonic accelerator key.
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthChars">
      <MemberSignature Language="C#" Value="public int WidthChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WidthChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("width-chars")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("wrap")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether lines should be wrapped if the text becomes too wide.</summary>
        <value>whether lines should be wrapped</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
