<Type Name="TextTagTable" FullName="Gtk.TextTagTable">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class TextTagTable : GLib.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextTagTable extends GLib.Object" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>GLib.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>
      A tag table defines a set of tags
    </summary>
    <remarks>
      A tag table defines a set of <see cref="T:Gtk.TextTag" /> tags that can be used
      together. Each buffer has one tag table associated with it; only
      tags from that tag table can be used with the buffer. A single
      tag table can be shared between multiple buffers, however.
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextTagTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextTagTable (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Protected Constructor.</summary>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextTagTable (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">Pointer to the C object.</param>
        <summary>Internal constructor</summary>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Gtk.TextTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Gtk.TextTag tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="Gtk.TextTag" />
      </Parameters>
      <Docs>
        <param name="tag">the tag to be added</param>
        <summary>Add a tag to the table. The tag is assigned the highest priority in the table.</summary>
        <remarks>
          <para>
            Add a tag to the table. The tag is assigned the highest
            priority in the table.
          </para>
          <para>
            <paramref name="tag" /> must not be in a tag table already,
            and may not have the same name as an already-added tag.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Foreach">
      <MemberSignature Language="C#" Value="public void Foreach (Gtk.TextTagTableForeach func);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Foreach(class Gtk.TextTagTableForeach func) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="Gtk.TextTagTableForeach" />
      </Parameters>
      <Docs>
        <param name="func">a <see cref="T:Gtk.TextTagTableForeach" /></param>
        <summary>Calls func on each tag in table</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.TextTagTable" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lookup">
      <MemberSignature Language="C#" Value="public Gtk.TextTag Lookup (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gtk.TextTag Lookup(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.TextTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name of a tag</param>
        <summary>Finds a <see cref="T:Gtk.TextTag" /> by its name</summary>
        <returns>The tag, or <see langword="null" /> if none by that name is in the table.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnTagAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnTagAdded (Gtk.TextTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTagAdded(class Gtk.TextTag tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideTagAdded", Type=typeof(Gtk.TextTagTable))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="Gtk.TextTag" />
      </Parameters>
      <Docs>
        <param name="tag">a <see cref="T:Gtk.TextTag" /></param>
        <summary>Default handler for the <see cref="M:Gtk.TextTagTable.TagAdded" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.TextTagTable.TagAdded" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTagChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTagChanged (Gtk.TextTag tag, bool size_changed);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTagChanged(class Gtk.TextTag tag, bool size_changed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideTagChanged", Type=typeof(Gtk.TextTagTable))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="Gtk.TextTag" />
        <Parameter Name="size_changed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tag">a <see cref="T:Gtk.TextTag" /></param>
        <param name="size_changed">a <see cref="T:System.Boolean" /></param>
        <summary>Default handler for the <see cref="M:Gtk.TextTagTable.TagChanged" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.TextTagTable.TagChanged" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTagRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnTagRemoved (Gtk.TextTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTagRemoved(class Gtk.TextTag tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideTagRemoved", Type=typeof(Gtk.TextTagTable))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="Gtk.TextTag" />
      </Parameters>
      <Docs>
        <param name="tag">a <see cref="T:Gtk.TextTag" /></param>
        <summary>Default handler for the <see cref="M:Gtk.TextTagTable.TagRemoved" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.TextTagTable.TagRemoved" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Gtk.TextTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class Gtk.TextTag tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="Gtk.TextTag" />
      </Parameters>
      <Docs>
        <param name="tag">the tag to be removed</param>
        <summary>Remove a tag from the table.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The size of the table</summary>
        <value>The number of the tags in this table</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TagAdded">
      <MemberSignature Language="C#" Value="public event Gtk.TagAddedHandler TagAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.TagAddedHandler TagAdded" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("tag_added")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.TagAddedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when a tag is added to the table</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TagChanged">
      <MemberSignature Language="C#" Value="public event Gtk.TagChangedHandler TagChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.TagChangedHandler TagChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("tag_changed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.TagChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when a tag in the table is changed</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TagRemoved">
      <MemberSignature Language="C#" Value="public event Gtk.TagRemovedHandler TagRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.TagRemovedHandler TagRemoved" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("tag_removed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.TagRemovedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when a tag is removed from the table</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
