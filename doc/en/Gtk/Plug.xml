<Type Name="Plug" FullName="Gtk.Plug">
  <TypeSignature Language="C#" Maintainer="John Luke" Value="public class Plug : Gtk.Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Plug extends Gtk.Window" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.Window</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>Toplevel for embedding into other processes.</summary>
    <remarks>
      Together with <see cref="T:Gtk.Socket" />, <see cref="T:Gtk.Plug" /> provides the ability to embed widgets from
      one process into another process in a fashion that is
      transparent to the user.  One process creates a <see cref="T:Gtk.Socket" /> widget and, passes the ID of that widgets
      window to the other process, which then creates a <see cref="T:Gtk.Plug " /> with that window ID.  Any widgets
      contained in the <see cref="T:Gtk.Plug" /> then will appear
      inside the first applications window.
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Plug ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Protected constructor.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Plug (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <summary>Protected Constructor.</summary>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Plug (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">Pointer to the C object.</param>
        <summary>Internal constructor</summary>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Plug (uint socket_id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 socket_id) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="socket_id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="socket_id">an object of type <see cref="System.UInt32" /></param>
        <summary>Creates a new <see cref="T:Gtk.Plug" /> widget inside the <see cref="T:Gtk.Socket" /> identified by socket_id.</summary>
        <remarks>
					Creates a new <see cref="T:Gtk.Plug" /> widget inside the <see cref="T:Gtk.Socket" /> identified by socket_id.
					If socket_id is 0, the <see cref="T:Gtk.Plug" /> is left "unplugged" and can later be plugged into a <see cref="T:Gtk.Socket" /> by <see cref="M:Gtk.Socket.AddId(System.UInt32)" />.
				</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Plug (Gdk.Display display, uint socket_id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Gdk.Display display, unsigned int32 socket_id) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="display" Type="Gdk.Display" />
        <Parameter Name="socket_id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="display">a <see cref="T:Gdk.Display" /></param>
        <param name="socket_id">a <see cref="T:System.UInt32" />, the ID of the socket to connect to on <paramref name="display" />.</param>
        <summary>Public constructor.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="public void Construct (uint socket_id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Construct(unsigned int32 socket_id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket_id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="socket_id">an object of type <see cref="T:System.UInt32" /></param>
        <summary>Finish the initialization of <see cref="T:Gtk.Plug" /> for a given <see cref="T:Gtk.Socket" /> identified by socket_id.</summary>
        <remarks>Finish the initialization of <see cref="T:Gtk.Plug" /> for a given <see cref="T:Gtk.Socket" /> identified by socket_id which is currently displayed on display.
				This method will generally only be used by classes deriving from <see cref="T:Gtk.Plug" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructForDisplay">
      <MemberSignature Language="C#" Value="public void ConstructForDisplay (Gdk.Display display, uint socket_id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ConstructForDisplay(class Gdk.Display display, unsigned int32 socket_id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Gdk.Display" />
        <Parameter Name="socket_id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="display">a <see cref="T:Gdk.Display" /></param>
        <param name="socket_id">a <see cref="T:System.UInt32" /></param>
        <summary>Finish the initialization of the plug identified by
	  <paramref name="socket_id" /> which is currently displayed on <paramref name="display" />.
	</summary>
        <remarks>This method will generally only be used by derived classes.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Embedded">
      <MemberSignature Language="C#" Value="public event EventHandler Embedded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Embedded" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("embedded")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raised when the plug window is reparented to the socket window.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.Plug" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public uint Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the window ID of a <see cref="T:Gtk.Plug" /> widget.</summary>
        <value>an object of type <see cref="T:System.UInt32" /></value>
        <remarks>Gets the window ID of a <see cref="T:Gtk.Plug" /> widget, which can then be used to embed this window inside another window,
				for instance with <see cref="M:Gtk.Socket.AddId(System.UInt32)" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmbedded">
      <MemberSignature Language="C#" Value="public bool IsEmbedded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmbedded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("embedded")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>IsEmbedded property.</summary>
        <value>If <see langword="true" />, the plus is embedded in a socket.</value>
        <remarks />
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="OnEmbedded">
      <MemberSignature Language="C#" Value="protected virtual void OnEmbedded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEmbedded() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideEmbedded", Type=typeof(Gtk.Plug))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.Plug.Embedded" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.Plug.Embedded" /> event.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
