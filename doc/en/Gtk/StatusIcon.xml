<Type Name="StatusIcon" FullName="Gtk.StatusIcon">
  <TypeSignature Language="C#" Value="public class StatusIcon : GLib.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatusIcon extends GLib.Object" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>GLib.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Status Icon.</summary>
    <remarks>A platform independent system tray icon.</remarks>
    <since version="Gtk# 2.10" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusIcon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Public constructor.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusIcon (Gdk.Pixbuf pixbuf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Gdk.Pixbuf pixbuf) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pixbuf" Type="Gdk.Pixbuf" />
      </Parameters>
      <Docs>
        <param name="pixbuf">An Icon pixbuf.</param>
        <summary>Public constructor.</summary>
        <remarks>Creates an instance using the specified icon pixbuf.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StatusIcon (GLib.GType gtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype GLib.GType gtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">A native type value.</param>
        <summary>Obsolete constructor.</summary>
        <remarks>Do not use.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusIcon (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">A native instance pointer.</param>
        <summary>Public constructor.</summary>
        <remarks>For use by language bindings to wrap native instances.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusIcon (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Icon file name.</param>
        <summary>Public constructor.</summary>
        <remarks>Creates an instance using the specified icon file.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public event EventHandler Activate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("activate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activate event.</summary>
        <remarks>Raised when the user activates the status icon.  This behavior is only provided on platforms that support it.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blinking">
      <MemberSignature Language="C#" Value="public bool Blinking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Blinking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("blinking")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the Icon is Blinking.</summary>
        <value>If <see langword="true" />, the icon is blinking.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Embedded">
      <MemberSignature Language="C#" Value="public bool Embedded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Embedded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("embedded")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public string File { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string File" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("file")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display an icon from a file.</summary>
        <value>A string containing the filename path.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public string FromFile { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FromFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use the File property instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display an icon from a file.</summary>
        <value>A string containing the filename path.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FromIconName">
      <MemberSignature Language="C#" Value="public string FromIconName { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FromIconName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use the IconName property instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display an icon from the current icon theme.</summary>
        <value>An icon name from the current theme.</value>
        <remarks>If the IconTheme is changed, the icon is updated to the icon of the same name in the new theme.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixbuf">
      <MemberSignature Language="C#" Value="public Gdk.Pixbuf FromPixbuf { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gdk.Pixbuf FromPixbuf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use the Pixbuf property instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gdk.Pixbuf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display a Pixbuf Icon.</summary>
        <value>A <see cref="Gdk.Pixbuf" /> containing the desired icon.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FromStock">
      <MemberSignature Language="C#" Value="public string FromStock { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FromStock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use the Stock property instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display a stock Icon.</summary>
        <value>A <see cref="Gtk.Stock" /> value, or other string registered as a stock id.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetGeometry">
      <MemberSignature Language="C#" Value="public bool GetGeometry (Gdk.Screen screen, Gdk.Rectangle area, out Gtk.Orientation orientation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetGeometry(class Gdk.Screen screen, valuetype Gdk.Rectangle area, valuetype Gtk.Orientation orientation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Replaced by (out Screen, out Rectangle, out Orientation) overload")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
        <Parameter Name="area" Type="Gdk.Rectangle" />
        <Parameter Name="orientation" Type="Gtk.Orientation&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="screen">Do not use.</param>
        <param name="area">Do not use.</param>
        <param name="orientation">Do not use.</param>
        <summary>Obsolete. Do not Use.</summary>
        <returns>
          <see langword="true" /> if the operation succeeded.</returns>
        <remarks>This method was incorrectly bound and is provided for backward compatibility.  Use the overload with out Screen and out Rectangle parameters instead.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGeometry">
      <MemberSignature Language="C#" Value="public bool GetGeometry (out Gdk.Screen screen, out Gdk.Rectangle area, out Gtk.Orientation orientation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetGeometry(class Gdk.Screen screen, valuetype Gdk.Rectangle area, valuetype Gtk.Orientation orientation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen&amp;" RefType="out" />
        <Parameter Name="area" Type="Gdk.Rectangle&amp;" RefType="out" />
        <Parameter Name="orientation" Type="Gtk.Orientation&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="screen">Returns the screen containing the status icon.</param>
        <param name="area">Returns the bounds of the status icon.</param>
        <param name="orientation">Returns the orientation of the status icon.</param>
        <summary>Get the Location and Orientation of the Icon.</summary>
        <returns>
          <see langword="true" /> if the operation was successful.</returns>
        <remarks>This information can be used to place popups like notification bubbles.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Native type value.</summary>
        <value>a <see cref="T:GLib.GType" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IconName">
      <MemberSignature Language="C#" Value="public string IconName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("icon-name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display an icon from the current icon theme.</summary>
        <value>An icon name from the current theme.</value>
        <remarks>If the IconTheme is changed, the icon is updated to the icon of the same name in the new theme.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmbedded">
      <MemberSignature Language="C#" Value="public bool IsEmbedded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmbedded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the icon is embedded in a notification area.</summary>
        <value>
          <see langword="true" /> if embedded.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="NewFromIconName">
      <MemberSignature Language="C#" Value="public static Gtk.StatusIcon NewFromIconName (string icon_name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gtk.StatusIcon NewFromIconName(string icon_name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.StatusIcon</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon_name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="icon_name">To be added.</param>
        <summary>Creates a status icon with a named icon from the current theme.</summary>
        <returns>A <see cref="T:Gtk.StatusIcon" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="NewFromStock">
      <MemberSignature Language="C#" Value="public static Gtk.StatusIcon NewFromStock (string stock_id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gtk.StatusIcon NewFromStock(string stock_id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.StatusIcon</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stock_id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stock_id">To be added.</param>
        <summary>Creates a status icon with a stock icon.</summary>
        <returns>A <see cref="T:Gtk.StatusIcon" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnActivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideActivate", Type=typeof(Gtk.StatusIcon))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.StatusIcon.Activate" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.StatusIcon.Activate" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopupMenu">
      <MemberSignature Language="C#" Value="protected virtual void OnPopupMenu (uint button, uint activate_time);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPopupMenu(unsigned int32 button, unsigned int32 activate_time) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverridePopupMenu", Type=typeof(Gtk.StatusIcon))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.UInt32" />
        <Parameter Name="activate_time" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="button">Button pressed.</param>
        <param name="activate_time">Time button was pressed.</param>
        <summary>Default handler for the <see cref="M:Gtk.StatusIcon.PopupMenu" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.StatusIcon.PopupMenu" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual bool OnSizeChanged (int size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSizeChanged(int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideSizeChanged", Type=typeof(Gtk.StatusIcon))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">The new size.</param>
        <summary>Default handler for the <see cref="M:Gtk.StatusIcon.SizeChanged" /> event.</summary>
        <returns>To be added.</returns>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.StatusIcon.SizeChanged" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Gtk.Orientation Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gtk.Orientation Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("orientation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="Pixbuf">
      <MemberSignature Language="C#" Value="public Gdk.Pixbuf Pixbuf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gdk.Pixbuf Pixbuf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("pixbuf")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gdk.Pixbuf</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display a Pixbuf Icon.</summary>
        <value>A <see cref="Gdk.Pixbuf" /> containing the desired icon.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PopupMenu">
      <MemberSignature Language="C#" Value="public event Gtk.PopupMenuHandler PopupMenu;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.PopupMenuHandler PopupMenu" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("popup_menu")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.PopupMenuHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>PopupMenu event.</summary>
        <remarks>Raised when the user brings up the context menu.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionMenu">
      <MemberSignature Language="C#" Value="public static void PositionMenu (Gtk.Menu menu, out int x, out int y, out bool push_in, IntPtr user_data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PositionMenu(class Gtk.Menu menu, int32 x, int32 y, bool push_in, native int user_data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Gtk.Menu" />
        <Parameter Name="x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="push_in" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="user_data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="menu">A menu to position.</param>
        <param name="x">Returns the x coordinate.</param>
        <param name="y">Returns the y coordinate.</param>
        <param name="push_in">Returns <see langword="true" /> if the menu must be pushed in to be completely visible.</param>
        <param name="user_data">Native handle of the StatusIcon for which the menu is being placed.</param>
        <summary>Menu Positioning Callback function.</summary>
        <remarks>Used with <see cref="M:Gtk.Menu.Popup" /> to position context menus.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentMenu">
      <MemberSignature Language="C#" Value="public void PresentMenu (Gtk.Menu menu, uint button, uint activate_time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PresentMenu(class Gtk.Menu menu, unsigned int32 button, unsigned int32 activate_time) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Gtk.Menu" />
        <Parameter Name="button" Type="System.UInt32" />
        <Parameter Name="activate_time" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="menu">The menu to present.</param>
        <param name="button">The button provided by <see cref="M:Gtk.StatusIcon.PopupMenu" />.</param>
        <param name="activate_time">The time provided by <see cref="M:Gtk.StatusIcon.PopupMenu" />.</param>
        <summary>Positions and displays a menu.</summary>
        <remarks>This method provides an optimized alternative to calling <see cref="M:Gtk.Menu.Popup" /> directly, saving a some native/managed marshaling roundtrips.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Screen">
      <MemberSignature Language="C#" Value="public Gdk.Screen Screen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gdk.Screen Screen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("screen")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gdk.Screen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("size")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pixel size available for Icon.</summary>
        <value>An integer pixel size.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event Gtk.SizeChangedHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.SizeChangedHandler SizeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("size_changed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.SizeChangedHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SizeChanged event.</summary>
        <remarks>Raised when the icon size changes.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stock">
      <MemberSignature Language="C#" Value="public string Stock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Stock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("stock")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display a stock Icon.</summary>
        <value>A <see cref="Gtk.Stock" /> value, or other string registered as a stock id.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StorageType">
      <MemberSignature Language="C#" Value="public Gtk.ImageType StorageType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gtk.ImageType StorageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("storage-type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.ImageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Image storage type.</summary>
        <value>A <see cref="T:Gtk.ImageType" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Tooltip">
      <MemberSignature Language="C#" Value="public string Tooltip { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tooltip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the Tooltip.</summary>
        <value>A tooltip string.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("visible")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the Icon is visible.</summary>
        <value>To be added.</value>
        <remarks>Doesn't guarantee the icon can be seen by the user.  See <see cref="M:Gtk.StatusIcon.IsEmbedded" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
