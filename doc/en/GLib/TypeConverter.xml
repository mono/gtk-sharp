<Type Name="TypeConverter" FullName="GLib.TypeConverter">
  <TypeSignature Language="C#" Value="public class TypeConverter" Maintainer="auto" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>glib-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fundamental type converter</summary>
    <remarks>Utilities for converting between <see cref="T:GLib.TypeFundamentals" /> and <see cref="T:System.Type" /></remarks>
  </Docs>
  <Members>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="public static GLib.GType LookupType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype GLib.GType LookupType(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Replaced by explicit (GType) cast")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">a <see cref="T:System.Type" /></param>
        <summary>Obsolete: Replaced by <see cref="T:GLib.GType" /> cast.</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
