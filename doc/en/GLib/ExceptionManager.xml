<Type Name="ExceptionManager" FullName="GLib.ExceptionManager">
  <TypeSignature Language="C#" Value="public class ExceptionManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExceptionManager extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>glib-sharp</AssemblyName>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Exception management class.</summary>
    <remarks />
    <since version="Gtk# 2.10" />
  </Docs>
  <Members>
    <Member MemberName="RaiseUnhandledException">
      <MemberSignature Language="C#" Value="public static void RaiseUnhandledException (Exception e, bool is_terminal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseUnhandledException(class System.Exception e, bool is_terminal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="is_terminal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e">Exception.</param>
        <param name="is_terminal">If <see langword="true" />, the exception terminates the application.</param>
        <summary>Raise Unhandled Exception method.</summary>
        <remarks>This method is generally only useful to language bindings.  If <paramref name="is_terminal" /> is set, or a user event handler requests application exit, this method does not return.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public static event GLib.UnhandledExceptionHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class GLib.UnhandledExceptionHandler UnhandledException" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GLib.UnhandledExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UnhandledException event.</summary>
        <remarks>Attach a <see cref="T:GLib.UnhandledExceptionHandler" /> delegate to this event to receive notification of Exceptions throw within managed callback delegates.  If the <see cref="T:GLib.UnhandledExceptionArgs" /> contain information regarding whether the Exception is terminal and can be used to request termination of the application via the <see cref="M:GLib.UnhandledExceptionArgs.ExitApplication" /> property.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
