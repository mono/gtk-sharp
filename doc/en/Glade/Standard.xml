<Type Name="Standard" FullName="Glade.Standard">
  <TypeSignature Language="C#" Value="public class Standard" Maintainer="auto" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Standard extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>glade-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Some standard methods used by glade to build widgets.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Standard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BuildChildren">
      <MemberSignature Language="C#" Value="public static void BuildChildren (Glade.XML self, Gtk.Widget parent, Glade.WidgetInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BuildChildren(class Glade.XML self, class Gtk.Widget parent, valuetype Glade.WidgetInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="Glade.XML" />
        <Parameter Name="parent" Type="Gtk.Widget" />
        <Parameter Name="info" Type="Glade.WidgetInfo" />
      </Parameters>
      <Docs>
        <param name="self">a <see cref="T:Glade.XML" /></param>
        <param name="parent">a <see cref="T:Gtk.Widget" /></param>
        <param name="info">a <see cref="T:Glade.WidgetInfo" /></param>
        <summary>This is the standard child building function.</summary>
        <remarks>It simply calls <see cref="M:Gtk.Container.Add()" /> on each child to add them to the parent, and process any packing properties using the generic container packing properties interfaces.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildWidget">
      <MemberSignature Language="C#" Value="public static Gtk.Widget BuildWidget (Glade.XML xml, GLib.GType widget_type, Glade.WidgetInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gtk.Widget BuildWidget(class Glade.XML xml, valuetype GLib.GType widget_type, valuetype Glade.WidgetInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="Glade.XML" />
        <Parameter Name="widget_type" Type="GLib.GType" />
        <Parameter Name="info" Type="Glade.WidgetInfo" />
      </Parameters>
      <Docs>
        <param name="xml">a <see cref="T:Glade.XML" /></param>
        <param name="widget_type">a <see cref="T:GLib.GType" /></param>
        <param name="info">a <see cref="T:Glade.WidgetInfo" /></param>
        <summary>This is the standard widget building function.</summary>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks>It processes all the widget properties using the standard object properties interfaces. This function will be sufficient for most widget types, thus reducing the amount of work needed to wrap a library.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
