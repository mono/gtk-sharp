// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;

	public delegate void ClipboardTargetsReceivedFunc2(Gtk.Clipboard clipboard, Gdk.Atom[] atoms);

}

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void ClipboardTargetsReceivedFuncNative2(IntPtr clipboard, IntPtr atoms, int n_atoms, IntPtr data);

	internal static class ClipboardTargetsReceivedFuncWrapper2 {

		public static void NativeCallback (IntPtr clipboard, IntPtr raw_atoms, int n_atoms, IntPtr data)
		{
			try {
				var gch = (GCHandle)data;
				var managed = (Gtk.ClipboardTargetsReceivedFunc2)gch.Target;
				
				Gdk.Atom[] atoms = new Gdk.Atom [n_atoms];
				for (int i = 0; i < n_atoms; ++i) {
					atoms[i] = (Gdk.Atom) GLib.Opaque.GetOpaque (IntPtr.Add(raw_atoms, IntPtr.Size * i), typeof(Gdk.Atom), true);
				}
				managed (GLib.Object.GetObject(clipboard) as Gtk.Clipboard, atoms);

				GLib.Marshaller.Free (raw_atoms);

				gch.Free ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}


		internal static readonly ClipboardTargetsReceivedFuncNative2 NativeDelegate = new ClipboardTargetsReceivedFuncNative2 (NativeCallback);
	}
}


