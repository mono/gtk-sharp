//  Gtk.LinkButton.custom - Gtk LinkButton customizations
//
//  Authors:  Marius Ungureanu <maungu@microsoft.com>
//
//  Copyright (c) 2017 Microsoft, Inc.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern GtkSharp.LinkButtonUriFuncNative gtk_link_button_set_uri_hook(GtkSharp.LinkButtonUriFuncNative func, IntPtr data, GLib.DestroyNotify destroy);

		static WeakReference<Gtk.LinkButtonUriFunc> lastUriHook = new WeakReference<Gtk.LinkButtonUriFunc> (null);
		public static Gtk.LinkButtonUriFunc SetUriHook(Gtk.LinkButtonUriFunc func) {
			Gtk.Application.AssertMainThread();
			IntPtr data;
			GLib.DestroyNotify destroy;

			Gtk.LinkButtonUriFunc toRet;
			lastUriHook.TryGetTarget (out toRet);
			if (func == null) {
				data = IntPtr.Zero;
				destroy = null;
			} else {
				data = (IntPtr) GCHandle.Alloc (func);
				destroy = GLib.DestroyHelper.NotifyHandler;
			}
			lastUriHook.SetTarget (func);
			GtkSharp.LinkButtonUriFuncNative raw_ret = gtk_link_button_set_uri_hook(GtkSharp.LinkButtonUriFuncWrapper.NativeDelegate, data, destroy);
			if (raw_ret == GtkSharp.LinkButtonUriFuncWrapper.NativeDelegate)
				return toRet;

			if (raw_ret == null)
				return null;

			Gtk.LinkButtonUriFunc ret = new GtkSharp.LinkButtonUriFuncInvoker (raw_ret).Handler;
			return ret;
		}