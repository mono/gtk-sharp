//  Gtk.FileChooserButton.custom - Gtk FileChooserButton customizations
//
//  Authors:  Mike Kestner  <mkestner@novell.com>
//
//  Copyright (c) 2005 Novell, Inc.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		bool IsWindowsPlatform {
			get {
				switch (Environment.OSVersion.Platform) {
				case PlatformID.Win32NT:
				case PlatformID.Win32S:
				case PlatformID.Win32Windows:
				case PlatformID.WinCE:
					return true;
				default:
					return false;
				}
			}
		}

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention=CallingConvention.Cdecl)]
		static extern IntPtr gtk_file_chooser_get_filenames (IntPtr raw);

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention=CallingConvention.Cdecl)]
		static extern IntPtr gtk_file_chooser_get_filenames_utf8 (IntPtr raw);

		public string[] Filenames {
			get {
				IntPtr raw_ret;
				if (IsWindowsPlatform)
					raw_ret = gtk_file_chooser_get_filenames_utf8 (Handle);
				else
					raw_ret = gtk_file_chooser_get_filenames (Handle);
				GLib.SList list = new GLib.SList (raw_ret, typeof (string), true, true);
				return GLib.Marshaller.ListToArray<string> (list);
            }
		}

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention=CallingConvention.Cdecl)]
		static extern IntPtr gtk_file_chooser_list_shortcut_folders (IntPtr raw);

		[DllImport("libgtk-win32-2.0-0.dll", CallingConvention=CallingConvention.Cdecl)]
		static extern IntPtr gtk_file_chooser_list_shortcut_folders_utf8 (IntPtr raw);

		public string[] ShortcutFolders {
			get {
				IntPtr raw_ret;
				if (IsWindowsPlatform)
					raw_ret = gtk_file_chooser_list_shortcut_folders_utf8 (Handle);
				else
					raw_ret = gtk_file_chooser_list_shortcut_folders (Handle);
				GLib.SList list = new GLib.SList (raw_ret, typeof (string), true, true);
				return GLib.Marshaller.ListToArray<string> (list);
			}
		}

