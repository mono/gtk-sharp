// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SourceFuncs : IEquatable<SourceFuncs> {

		internal GLibSharp.SourceFuncNative closure_callback;
		internal GLibSharp.SourceDummyMarshalNative closure_marshal;

		public static GLib.SourceFuncs Zero = new GLib.SourceFuncs ();

		public static GLib.SourceFuncs New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return GLib.SourceFuncs.Zero;
			return (GLib.SourceFuncs) Marshal.PtrToStructure (raw, typeof (GLib.SourceFuncs));
		}

		public bool Equals (SourceFuncs other)
		{
			return true && closure_callback.Equals (other.closure_callback) && closure_callback.Equals (other.closure_callback);
		}

		public override bool Equals (object other)
		{
			return other is SourceFuncs && Equals ((SourceFuncs) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType().FullName.GetHashCode() ^ closure_marshal.GetHashCode () ^ closure_marshal.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
